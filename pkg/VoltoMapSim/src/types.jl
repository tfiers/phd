# Container for the data generated by a neural network simulation.
# See `init_sim` for the actual properties inside.
#
# We use this type instead of using the wrapped NamedTuple directly, so that we don't get
# the huge NamedTuple type signatures in stacktraces, and to use it for typing function
# arguments
#
# We need the type info so functions taking a ::SimData argument can do type inference
# on its
struct SimData{T}
    data::NamedTuple{T}
end

SimData(; kw...) = SimData((; kw...))

function Base.getproperty(s::SimData, name::Symbol)
    if name == :data
        getfield(s, :data)  # Avoid recursion
    else
        getproperty(s.data, name)
    end
end

Base.propertynames(s::SimData) = propertynames(s.data)  # For autocompletion in Jupyter.

Base.show(io::IO, T::Type{SimData{NT}}) where {NT} = print(io, nameof(T))
# Don't print the huge type signature of the NamedTuple. Just "SimData".
