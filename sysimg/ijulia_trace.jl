precompile(Tuple{Type{REPL.Terminals.TTYTerminal}, String, Base.PipeEndpoint, Base.TTY, Base.TTY})
precompile(Tuple{typeof(Base.atreplinit), Function})
precompile(Tuple{typeof(libsodium_jll.__init__)})
precompile(Tuple{typeof(libsodium_jll.find_artifact_dir)})
precompile(Tuple{typeof(Base.invokelatest), Any})
precompile(Tuple{typeof(JLLWrappers.get_julia_libpaths)})
precompile(Tuple{typeof(ZeroMQ_jll.__init__)})
precompile(Tuple{typeof(ZeroMQ_jll.find_artifact_dir)})
precompile(Tuple{typeof(ZMQ.__init__)})
precompile(Tuple{typeof(Parsers.__init__)})
precompile(Tuple{typeof(MbedTLS_jll.__init__)})
precompile(Tuple{typeof(MbedTLS.f_send), Ptr{Nothing}, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(MbedTLS.f_recv), Ptr{Nothing}, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(MbedTLS.__init__)})
precompile(Tuple{typeof(IJulia.__init__)})
precompile(Tuple{typeof(Base.setindex!), Base.RefValue{IO}, Base.PipeEndpoint})
precompile(Tuple{typeof(Base.setindex!), Base.RefValue{IO}, Base.TTY})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{Symbol, Symbol}})
precompile(Tuple{typeof(Base.pathof), Module})
precompile(Tuple{typeof(Base.:(!=)), Base.Filesystem.StatStruct, Base.Filesystem.StatStruct})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Base.get), Base.EnvDict, String, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.EnvDict, Int64, String})
precompile(Tuple{typeof(Base.rem), UInt16, Type{UInt16}})
precompile(Tuple{typeof(Base.:(|)), Int16, Int16})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), UInt8})
precompile(Tuple{typeof(Base.Broadcast._getindex), Tuple{UInt8}, Int64})
precompile(Tuple{typeof(Parsers.ten), Type{Base.GMP.BigInt}})
precompile(Tuple{typeof(Base.:(*)), UInt64, UInt64})
precompile(Tuple{typeof(Base.signed), UInt64})
precompile(Tuple{Type{Pair{A, B} where B where A}, String, Int64})
precompile(Tuple{typeof(Base.Enums.namemap), Type{MbedTLS.MDKind}})
precompile(Tuple{typeof(Base.cconvert), Type{Ptr{Nothing}}, ZMQ.Context})
precompile(Tuple{typeof(Base.setindex!), Base.RefValue{Ptr{Nothing}}, Nothing})
precompile(Tuple{typeof(Base.cconvert), Type{Ptr{Int64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Printf.base), Type})
precompile(Tuple{Type{NamedTuple{(:modifier,), T} where T<:Tuple}, Tuple{String}})
precompile(Tuple{Type{NamedTuple{(:modifier,), Tuple{String}}}, Tuple{String}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:modifier,), Tuple{String}}, Symbol})
precompile(Tuple{Type{Base.CanonicalIndexError}, String, Any})
precompile(Tuple{Type{NamedTuple{(:more,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{Type{NamedTuple{(:readable, :writable), T} where T<:Tuple}, Tuple{Bool, Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:readable, :writable), Tuple{Bool, Bool}}, Symbol})
precompile(Tuple{Type{FileWatching.FDEvent}, Bool, Bool, Bool, Bool})
precompile(Tuple{typeof(IJulia.heartbeat_thread), Ptr{Nothing}})
precompile(Tuple{typeof(IJulia.init), Array{String, 1}})
precompile(Tuple{typeof(JSON.Parser.parse_value), JSON.Parser.ParserContext{Base.Dict{String, Any}, Int64, true, nothing}, JSON.Parser.StreamingParserState{Base.IOStream}})
precompile(Tuple{typeof(Base.split), String, String})
precompile(Tuple{typeof(Base.getindex), Array{Base.SubString{String}, 1}, Int64})
precompile(Tuple{typeof(Base.:(!=)), Base.SubString{String}, String})
precompile(Tuple{typeof(Base.Unicode.uppercase), Base.SubString{String}})
precompile(Tuple{Type{MbedTLS.MD{IsHMAC} where IsHMAC}, MbedTLS.MDKind, String})
precompile(Tuple{Type{IJulia.IJuliaStdio{IO_t} where IO_t<:IO}, Base.PipeEndpoint, String})
precompile(Tuple{Base.RedirectStdStream, IJulia.IJuliaStdio{Base.PipeEndpoint}})
precompile(Tuple{Type{Base.Multimedia.TextDisplay}, IJulia.IJuliaStdio{Base.PipeEndpoint}})
precompile(Tuple{typeof(Base.getindex), Base.Dict{String, String}, String})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Tuple{Pair{String, String}, Pair{String, String}, Pair{String, String}, Pair{String, Dates.DateTime}, Pair{String, String}, Pair{String, String}}})
precompile(Tuple{typeof(JSON.Writer.json), Base.Dict{String, Any}})
precompile(Tuple{typeof(JSON.Writer.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Dict{String, Any}})
precompile(Tuple{typeof(JSON.Writer.show_pair), JSON.Writer.CompactContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, JSON.Serializations.StandardSerialization, String, String})
precompile(Tuple{typeof(JSON.Writer.show_pair), JSON.Writer.CompactContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, JSON.Serializations.StandardSerialization, String, Dates.DateTime})
precompile(Tuple{typeof(JSON.Writer.json), Base.Dict{String, String}})
precompile(Tuple{typeof(JSON.Writer.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Dict{String, String}})
precompile(Tuple{typeof(Base.Filesystem.abspath), String, String, Vararg{String}})
precompile(Tuple{Type{IJulia.InlineDisplay}})
precompile(Tuple{typeof(Base.Multimedia.pushdisplay), IJulia.InlineDisplay})
precompile(Tuple{typeof(Base.getindex), Base.RefValue{IO}})
precompile(Tuple{typeof(Base.iszero), Float64})
precompile(Tuple{typeof(IJulia.watch_stdio)})
precompile(Tuple{typeof(Base.task_local_storage)})
precompile(Tuple{typeof(Base.delete!), Base.IdDict{Any, Any}, Any})
precompile(Tuple{typeof(IJulia.waitloop)})
precompile(Tuple{Type{Ptr{UInt8}}, Ptr{Nothing}})
precompile(Tuple{IJulia.var"#22#24"})
precompile(Tuple{IJulia.var"#23#25"})
precompile(Tuple{Type{NamedTuple{(:msg,), T} where T<:Tuple}, Tuple{String}})
precompile(Tuple{Type{NamedTuple{(:msg,), Tuple{String}}}, Tuple{String}})
precompile(Tuple{IJulia.var"#14#17"})
precompile(Tuple{IJulia.var"#15#18"})
precompile(Tuple{typeof(JSON.Parser.parse_value), JSON.Parser.ParserContext{Base.Dict{String, Any}, Int64, true, nothing}, JSON.Parser.MemoryParserState})
precompile(Tuple{Type{IJulia.Msg}, Array{String, 1}, Base.Dict{String, Any}, Base.Dict{String, Any}, Base.Dict{String, Any}, Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.getindex), Base.Dict{String, Function}, String})
precompile(Tuple{typeof(IJulia.kernel_info_request), ZMQ.Socket, IJulia.Msg})
precompile(Tuple{typeof(JSON.Writer.show_pair), JSON.Writer.CompactContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, JSON.Serializations.StandardSerialization, String, Array{Base.Dict{String, String}, 1}})
precompile(Tuple{typeof(JSON.Writer.show_pair), JSON.Writer.CompactContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, JSON.Serializations.StandardSerialization, String, Base.Dict{String, String}})
precompile(Tuple{typeof(Base.flush), IJulia.IJuliaStdio{Base.PipeEndpoint}})
precompile(Tuple{Base.var"#666#667"{typeof(IJulia.send_stdout), Base.Timer}})
precompile(Tuple{Base.var"#666#667"{typeof(IJulia.send_stderr), Base.Timer}})
precompile(Tuple{Type{Pair{A, B} where B where A}, String, Array{Base.Dict{K, V} where V where K, 1}})
precompile(Tuple{typeof(Core.convert), Type{Array{Base.Dict{K, V} where V where K, 1}}, Array{Base.Dict{K, V} where V where K, 1}})
precompile(Tuple{typeof(IJulia.execute_request), ZMQ.Socket, IJulia.Msg})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Pair{String, Int64}, Vararg{Pair{A, B} where B where A}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Tuple{Pair{String, Int64}, Pair{String, String}}})
precompile(Tuple{typeof(IJulia.msg_pub), IJulia.Msg, String, Base.Dict{String, Any}})
precompile(Tuple{typeof(JSON.Writer.show_pair), JSON.Writer.CompactContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, JSON.Serializations.StandardSerialization, String, Int64})
precompile(Tuple{typeof(Base.replace), String, Pair{Base.Regex, IJulia.var"#37#38"}})
precompile(Tuple{typeof(Base.occursin), Base.Regex, String})
precompile(Tuple{typeof(SoftGlobalScope.softscope_include_string), Module, String, String})
precompile(Tuple{typeof(IJulia.undisplay), Nothing})
precompile(Tuple{typeof(Base.Multimedia.display)})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Tuple{Pair{String, String}, Pair{String, Array{Base.Dict{K, V} where V where K, 1}}, Pair{String, Int64}, Pair{String, Base.Dict{Any, Any}}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{String, String}, Type{String}, Type{Any}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{String, Any}, Tuple{Pair{String, String}, Pair{String, Array{Base.Dict{K, V} where V where K, 1}}, Pair{String, Int64}, Pair{String, Base.Dict{Any, Any}}}, Int64})
precompile(Tuple{typeof(JSON.Writer.show_pair), JSON.Writer.CompactContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, JSON.Serializations.StandardSerialization, String, Array{Base.Dict{K, V} where V where K, 1}})
precompile(Tuple{typeof(JSON.Writer.show_pair), JSON.Writer.CompactContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, JSON.Serializations.StandardSerialization, String, Base.Dict{Any, Any}})
precompile(Tuple{Type{NamedTuple{(:x,), T} where T<:Tuple}, Tuple{Array{Int64, 1}}})
precompile(Tuple{Type{NamedTuple{(:copycols,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:copycols,), Tuple{Bool}}, Symbol})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:x,), Tuple{Array{Int64, 1}}}, Type{DataFrames.DataFrame}})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Int64, 1}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Int64, Any}, Any, Int64})
precompile(Tuple{typeof(IJulia.undisplay), DataFrames.DataFrame})
precompile(Tuple{typeof(IJulia.metadata), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(), Tuple{}}, Symbol})
precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{Int64, 1}, Array{String, 1}}}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Tuple{Vararg{Int64}}}, Tuple{Bool}})
precompile(Tuple{Type{Crayons.Crayon}, Crayons.ANSIColor, Crayons.ANSIColor, Crayons.ANSIStyle, Crayons.ANSIStyle, Crayons.ANSIStyle, Crayons.ANSIStyle, Crayons.ANSIStyle, Crayons.ANSIStyle, Crayons.ANSIStyle, Crayons.ANSIStyle, Crayons.ANSIStyle})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:bold,), Tuple{Bool}}, Type{Crayons.Crayon}})
precompile(Tuple{Type{NamedTuple{(:foreground,), T} where T<:Tuple}, Tuple{Symbol}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:foreground,), Tuple{Symbol}}, Symbol})
precompile(Tuple{typeof(IJulia.display_dict), DataFrames.DataFrame})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/plain")}, DataFrames.DataFrame})
precompile(Tuple{Base.var"#4#5"{DataFrames.var"#798#800"{Base.Dict{Any, String}}}, Tuple{DataType, Int64}})
precompile(Tuple{typeof(Base.get!), DataFrames.var"#799#801"{DataType, Int64}, Base.Dict{Any, String}, Type{Int64}})
precompile(Tuple{typeof(Base.nonmissingtype), Type{Int64}})
precompile(Tuple{PrettyTables.var"#_pt_text##kw", NamedTuple{(:alignment_anchor_fallback, :alignment_anchor_regex, :crop, :ellipsis_line_skip, :hlines, :highlighters, :maximum_columns_width, :newline_at_end, :reserved_display_lines, :row_label_crayon, :vcrop_mode, :vlines), Tuple{Symbol, Base.Dict{Int64, Array{Base.Regex, 1}}, Symbol, Int64, Array{Symbol, 1}, Tuple{PrettyTables.Highlighter}, Array{Int64, 1}, Bool, Int64, Crayons.Crayon, Symbol, Array{Int64, 1}}}, typeof(PrettyTables._pt_text), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, PrettyTables.PrintInfo})
precompile(Tuple{typeof(PrettyTables._fill_matrix_data!), Array{Array{String, 1}, 2}, PrettyTables.ProcessedTable, Array{Int64, 1}, PrettyTables.Display, Ref{Any}, Array{Int64, 1}, Bool, Bool, Array{Int64, 1}, Bool, Bool, Bool, Bool, Array{Int64, 1}, Array{Int64, 1}, Base.Val{:print}, Symbol})
precompile(Tuple{PrettyTables.var"#_parse_cell_text##kw", NamedTuple{(:autowrap, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, Bool, Int64, Bool, Bool, Bool, Bool, Base.Val{:print}}}, typeof(PrettyTables._parse_cell_text), String})
precompile(Tuple{typeof(Base.escape_string), Base.GenericIOBuffer{Array{UInt8, 1}}, String, String})
precompile(Tuple{typeof(PrettyTables._convert_axes), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.isassigned), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.string), Int64})
precompile(Tuple{typeof(PrettyTables._convert_axes), Array{String, 1}, Int64})
precompile(Tuple{typeof(PrettyTables._convert_axes), PrettyTables.ColumnTable, Int64, Int64})
precompile(Tuple{typeof(Base.isassigned), PrettyTables.ColumnTable, Int64, Int64})
precompile(Tuple{typeof(Tables.getcolumn), DataFrames.DataFrameColumns{DataFrames.DataFrame}, Symbol})
precompile(Tuple{typeof(Base.getindex), PrettyTables.ColumnTable, Int64, Int64})
precompile(Tuple{typeof(DataFrames._pretty_tables_general_formatter), Int64, Int64, Int64})
precompile(Tuple{PrettyTables.var"#_parse_cell_text##kw", NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Base.Val{:print}}}, typeof(PrettyTables._parse_cell_text), Int64})
precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, IJulia.IJuliaStdio{Base.PipeEndpoint}, Pair{Symbol, Bool}, Pair{Symbol, Bool}})
precompile(Tuple{Type{NamedTuple{(:context,), T} where T<:Tuple}, Tuple{Base.IOContext{Base.PipeEndpoint}}})
precompile(Tuple{Base.var"#sprint##kw", NamedTuple{(:context,), Tuple{Base.IOContext{Base.PipeEndpoint}}}, typeof(Base.sprint), Function, Int64})
precompile(Tuple{typeof(PrettyTables._process_data_cell_text), PrettyTables.ProcessedTable, Int64, String, Int64, Int64, Int64, Int64, Crayons.Crayon, Symbol, Ref{Any}})
precompile(Tuple{typeof(Base.getproperty), PrettyTables.Highlighter, Symbol})
precompile(Tuple{typeof(PrettyTables._getdata), PrettyTables.ColumnTable})
precompile(Tuple{typeof(DataFrames._pretty_tables_highlighter_func), DataFrames.DataFrame, Int64, Int64})
precompile(Tuple{typeof(Base.string), Base.Multimedia.MIME{Symbol("text/plain")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("image/svg+xml")}, DataFrames.DataFrame})
precompile(Tuple{typeof(IJulia._showable), Array{Base.Multimedia.MIME{mime} where mime, 1}, DataFrames.DataFrame})
precompile(Tuple{IJulia.var"#26#27"{DataFrames.DataFrame}, Base.Multimedia.MIME{Symbol("image/png")}})
precompile(Tuple{IJulia.var"#26#27"{DataFrames.DataFrame}, Base.Multimedia.MIME{Symbol("image/jpeg")}})
precompile(Tuple{IJulia.var"#26#27"{DataFrames.DataFrame}, Base.Multimedia.MIME{Symbol("text/markdown")}})
precompile(Tuple{IJulia.var"#26#27"{DataFrames.DataFrame}, Base.Multimedia.MIME{Symbol("text/html")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/markdown")}, DataFrames.DataFrame})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/html")}, DataFrames.DataFrame})
precompile(Tuple{Type{NamedTuple{(:font_style,), T} where T<:Tuple}, Tuple{String}})
precompile(Tuple{Type{NamedTuple{(:font_style,), Tuple{String}}}, Tuple{String}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:font_style,), Tuple{String}}, Symbol})
precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type})
precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type})
precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{Base.var"##s82#216", Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:alignment, :backend, :compact_printing, :formatters, :header_alignment, :header_cell_titles, :highlighters, :max_num_of_columns, :max_num_of_rows, :maximum_columns_width, :minify, :row_label_column_title, :row_labels, :row_number_alignment, :row_number_column_title, :show_omitted_cell_summary, :show_row_number, :show_subheader, :standalone, :table_class, :table_div_class, :table_style, :top_left_str, :top_right_str_decoration, :vcrop_mode, :wrap_table_in_div), Tuple{Array{Symbol, 1}, Base.Val{:html}, Bool, Tuple{typeof(DataFrames._pretty_tables_general_formatter)}, Symbol, Tuple{Nothing, Array{String, 1}}, Tuple{PrettyTables.HtmlHighlighter}, Int64, Int64, String, Bool, String, Nothing, Symbol, String, Bool, Bool, Bool, Bool, String, String, Base.Dict{String, String}, String, PrettyTables.HtmlDecoration, Symbol, Bool}}}})
precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type, Type, Type, Type})
precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{Type{NamedTuple{(:font_weight,), T} where T<:Tuple}, Tuple{String}})
precompile(Tuple{Type{NamedTuple{(:font_weight,), Tuple{String}}}, Tuple{String}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:font_weight,), Tuple{String}}, Symbol})
precompile(Tuple{typeof(IJulia.display_mimestring), Base.Multimedia.MIME{Symbol("text/html")}, DataFrames.DataFrame})
precompile(Tuple{DataFrames.var"#802#804"{Int64, Base.Dict{Type, String}}, Type})
precompile(Tuple{typeof(Base.convert), Type{Type}, Type})
precompile(Tuple{typeof(Base.get!), DataFrames.var"#803#805"{DataType, Int64}, Base.Dict{Type, String}, Type{Int64}})
precompile(Tuple{PrettyTables.var"#_pt_html##kw", NamedTuple{(:header_cell_titles, :highlighters, :maximum_columns_width, :minify, :show_omitted_cell_summary, :standalone, :table_class, :table_div_class, :table_style, :top_left_str, :top_right_str_decoration, :vcrop_mode, :wrap_table_in_div), Tuple{Tuple{Nothing, Array{String, 1}}, Tuple{PrettyTables.HtmlHighlighter}, String, Bool, Bool, Bool, String, String, Base.Dict{String, String}, String, PrettyTables.HtmlDecoration, Symbol, Bool}}, typeof(PrettyTables._pt_html), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, PrettyTables.PrintInfo})
precompile(Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ForwardOrdering, Array{String, 1}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{String, 1}}})
precompile(Tuple{typeof(PrettyTables._str_html_escaped), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Bool, Bool})
precompile(Tuple{PrettyTables.var"#_parse_cell_html##kw", NamedTuple{(:allow_html_in_cells, :compact_printing, :limit_printing, :renderer), Tuple{Bool, Bool, Bool, Base.Val{:print}}}, typeof(PrettyTables._parse_cell_html), String})
precompile(Tuple{Base.var"#sprint##kw", NamedTuple{(:context,), Tuple{Base.IOContext{Base.PipeEndpoint}}}, typeof(Base.sprint), Function, String})
precompile(Tuple{Type{NamedTuple{(:allow_html_in_cells, :cell_first_line_only, :compact_printing, :limit_printing, :linebreaks, :renderer), T} where T<:Tuple}, Tuple{Bool, Bool, Bool, Bool, Bool, Base.Val{:print}}})
precompile(Tuple{PrettyTables.var"#_parse_cell_html##kw", NamedTuple{(:allow_html_in_cells, :cell_first_line_only, :compact_printing, :limit_printing, :linebreaks, :renderer), Tuple{Bool, Bool, Bool, Bool, Bool, Base.Val{:print}}}, typeof(PrettyTables._parse_cell_html), Int64})
precompile(Tuple{typeof(Base.string), Base.Multimedia.MIME{Symbol("text/html")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/latex")}, DataFrames.DataFrame})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Nothing, typeof(Base.identity), Tuple{Int64}}}, Function, Tuple{Int64}, Nothing})
precompile(Tuple{Type{NamedTuple{(:eltypes,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:eltypes,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(IJulia.display_mimestring), Base.Multimedia.MIME{Symbol("text/latex")}, DataFrames.DataFrame})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64, Int64})
precompile(Tuple{typeof(DataFrames.getmaxwidths), DataFrames.DataFrame, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Symbol, Nothing, Bool, Base.GenericIOBuffer{Array{UInt8, 1}}, Int64})
precompile(Tuple{Base.var"#458#459"{Tuple{}, String, Tuple{}}, Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(DataFrames.ourstrwidth), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Int64, Base.GenericIOBuffer{Array{UInt8, 1}}, Int64})
precompile(Tuple{typeof(Base.Sort.searchsortedfirst), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Printf.format), Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Base.Val{Char(0x64000000)}}}}, Int64})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Int64, Int64})
precompile(Tuple{Base.var"#sprint##kw", NamedTuple{(:context,), Tuple{Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}}}, typeof(Base.sprint), Function, Int64, Vararg{Int64}})
precompile(Tuple{Base.var"##sprint#452", Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Int64, typeof(Base.sprint), Function, Int64, Vararg{Int64}})
precompile(Tuple{typeof(DataFrames.ourshow), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Int64, Int64})
precompile(Tuple{typeof(Base.string), Base.Multimedia.MIME{Symbol("text/latex")}})
precompile(Tuple{IJulia.var"#26#27"{DataFrames.DataFrame}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v4+json")}})
precompile(Tuple{IJulia.var"#26#27"{DataFrames.DataFrame}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v3+json")}})
precompile(Tuple{IJulia.var"#26#27"{DataFrames.DataFrame}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v2+json")}})
precompile(Tuple{IJulia.var"#26#27"{DataFrames.DataFrame}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v5+json")}})
precompile(Tuple{IJulia.var"#26#27"{DataFrames.DataFrame}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v4+json")}})
precompile(Tuple{IJulia.var"#26#27"{DataFrames.DataFrame}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v3+json")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("application/vnd.dataresource+json")}, DataFrames.DataFrame})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("application/vnd.plotly.v1+json")}, DataFrames.DataFrame})
precompile(Tuple{Type{Pair{A, B} where B where A}, String, Base.Dict{Any, Any}})
precompile(Tuple{Type{Pair{A, B} where B where A}, String, Base.Dict{String, Union{String, JSON.Writer.JSONText}}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Tuple{Pair{String, Int64}, Pair{String, Base.Dict{Any, Any}}, Pair{String, Base.Dict{String, Union{String, JSON.Writer.JSONText}}}}})
precompile(Tuple{typeof(JSON.Writer.show_pair), JSON.Writer.CompactContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, JSON.Serializations.StandardSerialization, String, Base.Dict{String, Union{String, JSON.Writer.JSONText}}})
precompile(Tuple{typeof(JSON.Writer.show_json), JSON.Writer.CompactContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, JSON.Serializations.StandardSerialization, Base.Dict{String, Union{String, JSON.Writer.JSONText}}})
precompile(Tuple{typeof(PyCall._set_finalized)})
precompile(Tuple{typeof(PyCall.pyjlwrap_dealloc), Ptr{PyCall.PyObject_struct}})
precompile(Tuple{typeof(PyCall.pyjlwrap_repr), Ptr{PyCall.PyObject_struct}})
precompile(Tuple{typeof(PyCall.pyjlwrap_hash), Ptr{PyCall.PyObject_struct}})
precompile(Tuple{typeof(PyCall.pyjlwrap_hash32), Ptr{PyCall.PyObject_struct}})
precompile(Tuple{typeof(PyCall.pyjlwrap_call), Ptr{PyCall.PyObject_struct}, Ptr{PyCall.PyObject_struct}, Ptr{PyCall.PyObject_struct}})
precompile(Tuple{typeof(PyCall.pyjlwrap_getattr), Ptr{PyCall.PyObject_struct}, Ptr{PyCall.PyObject_struct}})
precompile(Tuple{typeof(PyCall.pyjlwrap_getiter), Ptr{PyCall.PyObject_struct}})
precompile(Tuple{typeof(PyCall.__init__)})
precompile(Tuple{typeof(Base.empty!), Base.Dict{Module, PyCall.PyDict{String, PyCall.PyObject, true}}})
precompile(Tuple{typeof(Base.empty!), Base.Dict{Symbol, Base.Timer}})
precompile(Tuple{typeof(Base.empty!), Base.Dict{Symbol, Ptr{Nothing}}})
precompile(Tuple{typeof(Base.empty!), Base.Dict{Ptr{PyCall.PyObject_struct}, Any}})
precompile(Tuple{typeof(Base.empty!), Base.IdDict{DataType, Ptr{PyCall.PyObject_struct}}})
precompile(Tuple{typeof(Base.convert), Type{PyCall.PyObject}, PyCall.PyObject})
precompile(Tuple{typeof(Base.setindex!), Base.IdDict{DataType, Ptr{PyCall.PyObject_struct}}, Any, Any})
precompile(Tuple{typeof(Base._append!), Array{PyCall.PyMemberDef, 1}, Base.HasLength, Tuple{PyCall.PyMemberDef, PyCall.PyMemberDef}})
precompile(Tuple{typeof(Base.getproperty), PyCall.PyError, Symbol})
precompile(Tuple{typeof(Base.unsafe_load), Ptr{Ptr{PyCall.PyObject_struct}}})
precompile(Tuple{typeof(PyCall.pyisinstance), PyCall.PyObject, Ptr{PyCall.PyObject_struct}})
precompile(Tuple{typeof(Base.escape_string), String})
precompile(Tuple{typeof(PyCall.pyerror), String, PyCall.PyError})
precompile(Tuple{typeof(Base.get!), PyCall.var"#115#116"{Module}, Base.Dict{Module, PyCall.PyDict{String, PyCall.PyObject, true}}, Module})
precompile(Tuple{typeof(IJulia.push_postexecute_hook), Function})
precompile(Tuple{typeof(Base.close), Base.IOStream})
precompile(Tuple{typeof(PyCall.pydecref), PyCall.PyObject})
precompile(Tuple{typeof(PyCall.pydecref), PyCall.PyBuffer})
precompile(Tuple{typeof(ColorTypes.__init__)})
precompile(Tuple{typeof(PyPlot.__init__)})
precompile(Tuple{typeof(Base.Multimedia.displayable), Base.Multimedia.MIME{Symbol("image/png")}})
precompile(Tuple{typeof(Base.Multimedia.displayable), IJulia.InlineDisplay, Base.Multimedia.MIME{Symbol("image/png")}})
precompile(Tuple{Type{NamedTuple{(:windows_verbatim,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:windows_verbatim,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(Base.something), String, String, Vararg{String}})
precompile(Tuple{typeof(Base.uv_return_spawn), Ptr{Nothing}, Int64, Int32})
precompile(Tuple{typeof(PyCall.pyimport_conda), String, String, String})
precompile(Tuple{Type{Pair{A, B} where B where A}, String, Symbol})
precompile(Tuple{typeof(Base.:(<)), UInt32, Int64})
precompile(Tuple{typeof(PyCall.tkinter_name)})
precompile(Tuple{typeof(Base.uv_timercb), Ptr{Nothing}})
precompile(Tuple{typeof(PyPlot.find_backend), PyCall.PyObject})
precompile(Tuple{Type{PyCall.PyDict{PyCall.PyAny, PyCall.PyAny, true}}, PyCall.PyObject})
precompile(Tuple{typeof(Base.get), PyCall.PyObject, Type{PyCall.PyAny}, String, String})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Tuple{PyCall.PyObject, Type}, 1}})
precompile(Tuple{typeof(PyCall.pytype_mapping), PyCall.PyObject, Type})
precompile(Tuple{typeof(PyCall._setproperty!), PyCall.PyObject, String, Function})
precompile(Tuple{typeof(IJulia.push_preexecute_hook), Function})
precompile(Tuple{typeof(IJulia.push_posterror_hook), Function})
precompile(Tuple{typeof(Base.:(!=)), Symbol, Symbol})
precompile(Tuple{typeof(PyCall._pycall!), PyCall.PyObject, PyCall.PyObject, Tuple{}, Int64, Ptr{Nothing}})
precompile(Tuple{typeof(Base.convert), Type{Bool}, PyCall.PyObject})
precompile(Tuple{PyCall.var"##pycall#113", Base.Pairs{Symbol, Int64, Tuple{Symbol, Symbol}, NamedTuple{(:vmin, :vmax), Tuple{Int64, Int64}}}, typeof(PyCall.pycall), PyCall.PyObject, Type{PyCall.PyAny}})
precompile(Tuple{Type{PyCall.PyObject}, String})
precompile(Tuple{typeof(Base.getindex), Base.Dict{AbstractString, Any}, String})
precompile(Tuple{Type{PyCall.PyObject}, Int64})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{PyCall.PyObject_struct}}, PyCall.PyObject})
precompile(Tuple{PyCall.var"#129#130"})
precompile(Tuple{typeof(Base.convert), Type{Ptr{UInt8}}, Ptr{Nothing}})
precompile(Tuple{typeof(PyPlot.display_figs)})
precompile(Tuple{typeof(Base.convert), Type{Array{T, N} where N where T}, PyCall.PyObject})
precompile(Tuple{Type{Array{Any, N} where N}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(PyCall.py2array), Type, Array{Any, 1}, PyCall.PyObject, Int64, Int64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.identity), Array{Any, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Any, 1}, Base.Generator{Array{Any, 1}, typeof(Base.identity)}})
precompile(Tuple{typeof(Base.uv_writecb_task), Ptr{Nothing}, Int32})
precompile(Tuple{typeof(Base.Multimedia.display)})
precompile(Tuple{Type{NamedTuple{(:overlap,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:overlap,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(IJulia.execute_request), ZMQ.Socket, IJulia.Msg})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Pair{String, Int64}, Vararg{Pair{A, B} where B where A}})
precompile(Tuple{typeof(IJulia.msg_pub), IJulia.Msg, String, Base.Dict{String, Any}})
precompile(Tuple{typeof(PyPlot.force_new_fig)})
precompile(Tuple{PyCall.PyObject})
precompile(Tuple{typeof(PyCall._pyjlwrap_call), Function, Ptr{PyCall.PyObject_struct}, Ptr{PyCall.PyObject_struct}})
precompile(Tuple{typeof(PyCall.typetuple), Base.Generator{Base.UnitRange{Int64}, PyCall.var"#36#37"{PyCall.PyObject}}})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, PyCall.var"#36#37"{PyCall.PyObject}}})
precompile(Tuple{typeof(Base.convert), Type{Tuple{}}, PyCall.PyObject})
precompile(Tuple{Type{PyCall.PyDict{Symbol, PyCall.PyObject, true}}, PyCall.PyObject})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, PyCall.var"#57#58"{typeof(PyPlot.figure)}, PyCall.PyDict{Symbol, PyCall.PyObject, true}})
precompile(Tuple{typeof(Base.collect), Base.Generator{PyCall.PyDict{Symbol, PyCall.PyObject, true}, PyCall.var"#57#58"{typeof(PyPlot.figure)}}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Array{Tuple{Symbol, Any}, 1}})
precompile(Tuple{typeof(PyPlot.figure)})
precompile(Tuple{typeof(Base.convert), Type{PyPlot.Figure}, PyCall.PyObject})
precompile(Tuple{typeof(PyCall.pyreturn), PyPlot.Figure})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, PyCall.var"#36#37"{PyCall.PyObject}}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Tuple{PyPlot.Figure, PyCall.PyAny}}, PyCall.PyObject})
precompile(Tuple{typeof(Base.length), Core.SimpleVector})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{PyPlot.Figure, PyCall.PyObject}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{PyPlot.Figure, PyCall.PyObject}, Int64, Int64})
precompile(Tuple{typeof(Base._similar_for), Array{Any, 1}, Type{PyCall.PyObject}, Base.Generator{Array{Any, 1}, typeof(Base.identity)}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.ndims), Array{PyCall.PyObject, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{PyCall.PyObject, 1}, PyCall.PyObject, Base.Generator{Array{Any, 1}, typeof(Base.identity)}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{PyCall.PyObject, 1}})
precompile(Tuple{typeof(Base.getproperty), PyCall.PyObject, String})
precompile(Tuple{typeof(Base.convert), Type{Integer}, PyCall.PyObject})
precompile(Tuple{typeof(Base.:(∉)), Int64, Base.Set{Int64}})
precompile(Tuple{typeof(Base.Multimedia.display), IJulia.InlineDisplay, PyPlot.Figure})
precompile(Tuple{typeof(Base.flush), IJulia.IJuliaStdio{Base.PipeEndpoint}})
precompile(Tuple{typeof(IJulia.send_stream), String})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/plain")}, PyPlot.Figure})
precompile(Tuple{typeof(Base.sizeof), PyPlot.Figure})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, PyCall.PyObject})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("image/svg+xml")}, PyPlot.Figure})
precompile(Tuple{typeof(IJulia._showable), Array{Base.Multimedia.MIME{mime} where mime, 1}, PyPlot.Figure})
precompile(Tuple{IJulia.var"#26#27"{PyPlot.Figure}, Base.Multimedia.MIME{Symbol("image/png")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("image/png")}, PyPlot.Figure})
precompile(Tuple{Type{NamedTuple{(:format, :bbox_inches), T} where T<:Tuple}, Tuple{String, String}})
precompile(Tuple{Type{NamedTuple{(:format, :bbox_inches), Tuple{String, String}}}, Tuple{String, String}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##__init__#312#77"{PyCall.var"##__init__#312#76#78"}}, Tuple{Symbol, PyCall.var"##close#313#79"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##close#313#79"}, Tuple{Symbol, PyCall.var"##fileno#316#82"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##fileno#316#82"}, Tuple{Symbol, PyCall.var"##flush#317#83"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##flush#317#83"}, Tuple{Symbol, PyCall.var"##isatty#318#84"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##isatty#318#84"}, Tuple{Symbol, PyCall.var"##readable#319#85"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##readable#319#85"}, Tuple{Symbol, PyCall.var"##writable#320#86"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##writable#320#86"}, Tuple{Symbol, PyCall.var"##readline#321#87"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##readline#321#87"}, Tuple{Symbol, PyCall.var"##readlines#322#88"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##readlines#322#88"}, Tuple{Symbol, PyCall.var"##seek#323#89"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##seek#323#89"}, Tuple{Symbol, PyCall.var"##seekable#324#90"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##seekable#324#90"}, Tuple{Symbol, PyCall.var"##tell#325#91"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##tell#325#91"}, Tuple{Symbol, PyCall.var"##writelines#326#92"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##writelines#326#92"}, Tuple{Symbol, PyCall.var"##read#327#93"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##read#327#93"}, Tuple{Symbol, PyCall.var"##readall#328#94"}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, PyCall.var"##readall#328#94"}, Tuple{Symbol, PyCall.var"##readinto#329#95"}, Vararg{Any}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:format, :bbox_inches), Tuple{String, String}}})
precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:format, :bbox_inches), Tuple{String, String}}, Tuple{Symbol, Symbol}})
precompile(Tuple{Type{Base.Pairs{Symbol, String, Tuple{Symbol, Symbol}, NamedTuple{(:format, :bbox_inches), Tuple{String, String}}}}, NamedTuple{(:format, :bbox_inches), Tuple{String, String}}, Tuple{Symbol, Symbol}})
precompile(Tuple{typeof(Base.convert), Type{NamedTuple{(:format, :bbox_inches), Tuple{String, String}}}, NamedTuple{(:format, :bbox_inches), Tuple{String, String}}})
precompile(Tuple{typeof(IJulia.display_mimestring), Base.Multimedia.MIME{Symbol("image/png")}, PyPlot.Figure})
precompile(Tuple{typeof(PyCall._pycall!), PyCall.PyObject, PyCall.PyObject, Tuple{Base.IOContext{Base64.Base64EncodePipe}}, Base.Pairs{Symbol, String, Tuple{Symbol, Symbol}, NamedTuple{(:format, :bbox_inches), Tuple{String, String}}}})
precompile(Tuple{typeof(PyCall.pyio_initialize)})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##__init__#312#77"{PyCall.var"##__init__#312#76#78"}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##close#313#79"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##fileno#316#82"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##flush#317#83"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##isatty#318#84"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##readable#319#85"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##writable#320#86"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##readline#321#87"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##readlines#322#88"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##seek#323#89"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##seekable#324#90"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##tell#325#91"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##writelines#326#92"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##read#327#93"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##readall#328#94"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##readinto#329#95"}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Symbol, Function}, 1}, Tuple{Symbol, PyCall.var"##write#330#96"}, Int64})
precompile(Tuple{Type{Array{Tuple{Symbol, Function, Nothing}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Tuple{Symbol, Function, Nothing}, 1}, Tuple{Tuple{Symbol, PyCall.var"##encoding_get#315#81", Nothing}, Tuple{Symbol, PyCall.var"##closed_get#314#80", Nothing}}})
precompile(Tuple{typeof(Base.filter!), Base.var"#132#133"{typeof(Base.:(∉)), typeof(Base.push!), Base.Set{Any}}, Array{Any, 1}})
precompile(Tuple{typeof(Base.mapfilter), Base.var"#132#133"{typeof(Base.:(∉)), typeof(Base.push!), Base.Set{Any}}, typeof(Base.push!), Array{Any, 1}, Array{Any, 1}})
precompile(Tuple{typeof(Base.mapfilter), Base.var"#132#133"{typeof(Base.:(∉)), typeof(Base.push!), Base.Set{Any}}, typeof(Base.push!), Array{PyCall.PyObject, 1}, Array{Any, 1}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##__init__#312#77"{PyCall.var"##__init__#312#76#78"}}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, PyCall.PyObject})
precompile(Tuple{typeof(Base.empty), Base.Dict{Any, Any}, Type{Symbol}, Type{PyCall.PyObject}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, PyCall.PyObject}, PyCall.PyObject, Symbol})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, PyCall.PyObject}, Base.Generator{Array{Tuple{Symbol, Function}, 1}, PyCall.var"#47#49"}, Int64})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##close#313#79"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##fileno#316#82"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##flush#317#83"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##isatty#318#84"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##readable#319#85"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##writable#320#86"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##readline#321#87"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##readlines#322#88"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##seek#323#89"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##seekable#324#90"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##tell#325#91"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##writelines#326#92"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##read#327#93"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##readall#328#94"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##readinto#329#95"}})
precompile(Tuple{PyCall.var"#47#49", Tuple{Symbol, PyCall.var"##write#330#96"}})
precompile(Tuple{PyCall.var"#48#50", Tuple{Symbol, PyCall.var"##encoding_get#315#81", Nothing}})
precompile(Tuple{PyCall.PyObject, PyCall.PyObject, Vararg{PyCall.PyObject}})
precompile(Tuple{PyCall.var"##_#114", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, PyCall.PyObject, PyCall.PyObject, Vararg{PyCall.PyObject}})
precompile(Tuple{typeof(PyCall._pycall!), PyCall.PyObject, PyCall.PyObject, Tuple{PyCall.PyObject, PyCall.PyObject}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, PyCall.PyObject}, Base.Generator{Array{Tuple{Symbol, Function, Nothing}, 1}, PyCall.var"#48#50"}, Int64})
precompile(Tuple{PyCall.var"#48#50", Tuple{Symbol, PyCall.var"##closed_get#314#80", Nothing}})
precompile(Tuple{typeof(Base.merge), Base.Dict{Symbol, PyCall.PyObject}, Base.Dict{Symbol, PyCall.PyObject}, Base.Dict{Any, Any}})
precompile(Tuple{typeof(PyCall._pycall!), PyCall.PyObject, PyCall.PyObject, Tuple{String, Tuple{PyCall.PyObject}, Base.Dict{Any, Any}}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
precompile(Tuple{Type{PyCall.PyObject}, Symbol})
precompile(Tuple{typeof(Base.getindex), Base.Dict{Any, Any}, Symbol})
precompile(Tuple{Type{PyCall.PyObject}, PyCall.PyObject})
precompile(Tuple{typeof(Base.convert), Type{Tuple{PyCall.PyAny, PyCall.PyAny}}, PyCall.PyObject})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, PyCall.var"#57#58"{PyCall.var"##__init__#312#77"{PyCall.var"##__init__#312#76#78"}}, PyCall.PyDict{Symbol, PyCall.PyObject, true}})
precompile(Tuple{typeof(Base.collect), Base.Generator{PyCall.PyDict{Symbol, PyCall.PyObject, true}, PyCall.var"#57#58"{PyCall.var"##__init__#312#77"{PyCall.var"##__init__#312#76#78"}}}})
precompile(Tuple{PyCall.var"##__init__#312#77"{PyCall.var"##__init__#312#76#78"}, PyCall.PyObject, Base.IOContext{Base64.Base64EncodePipe}})
precompile(Tuple{typeof(PyCall.pyreturn), Nothing})
precompile(Tuple{typeof(Base.convert), Type{Tuple{PyCall.PyAny, AbstractString}}, PyCall.PyObject})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, PyCall.var"#57#58"{PyCall.var"##write#330#96"}, PyCall.PyDict{Symbol, PyCall.PyObject, true}})
precompile(Tuple{typeof(Base.collect), Base.Generator{PyCall.PyDict{Symbol, PyCall.PyObject, true}, PyCall.var"#57#58"{PyCall.var"##write#330#96"}}})
precompile(Tuple{PyCall.var"##write#330#96", PyCall.PyObject, String})
precompile(Tuple{typeof(Base.write), Base.IOContext{Base64.Base64EncodePipe}, String})
precompile(Tuple{typeof(Base.unsafe_write), Base.GenericIOBuffer{Array{UInt8, 1}}, Ptr{UInt8}, Int64})
precompile(Tuple{typeof(PyCall.pyreturn), Int64})
precompile(Tuple{typeof(Base.convert), Type{Tuple{PyCall.PyAny}}, PyCall.PyObject})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, PyCall.var"#57#58"{PyCall.var"##flush#317#83"}, PyCall.PyDict{Symbol, PyCall.PyObject, true}})
precompile(Tuple{typeof(Base.collect), Base.Generator{PyCall.PyDict{Symbol, PyCall.PyObject, true}, PyCall.var"#57#58"{PyCall.var"##flush#317#83"}}})
precompile(Tuple{PyCall.var"##flush#317#83", PyCall.PyObject})
precompile(Tuple{typeof(Base.flush), Base.IOContext{Base64.Base64EncodePipe}})
precompile(Tuple{typeof(Base.string), Base.Multimedia.MIME{Symbol("image/png")}})
precompile(Tuple{IJulia.var"#26#27"{PyPlot.Figure}, Base.Multimedia.MIME{Symbol("text/markdown")}})
precompile(Tuple{IJulia.var"#26#27"{PyPlot.Figure}, Base.Multimedia.MIME{Symbol("text/html")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/latex")}, PyPlot.Figure})
precompile(Tuple{IJulia.var"#26#27"{PyPlot.Figure}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v4+json")}})
precompile(Tuple{IJulia.var"#26#27"{PyPlot.Figure}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v3+json")}})
precompile(Tuple{IJulia.var"#26#27"{PyPlot.Figure}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v2+json")}})
precompile(Tuple{IJulia.var"#26#27"{PyPlot.Figure}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v5+json")}})
precompile(Tuple{IJulia.var"#26#27"{PyPlot.Figure}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v4+json")}})
precompile(Tuple{IJulia.var"#26#27"{PyPlot.Figure}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v3+json")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("application/vnd.dataresource+json")}, PyPlot.Figure})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("application/vnd.plotly.v1+json")}, PyPlot.Figure})
precompile(Tuple{Type{IJulia.Msg}, Array{String, 1}, Base.Dict{String, Any}, Base.Dict{String, Base.Dict{K, V} where V where K}, Base.Dict{String, Any}, Base.Dict{String, Any}})
precompile(Tuple{typeof(JSON.Writer.json), Base.Dict{String, Base.Dict{K, V} where V where K}})
precompile(Tuple{typeof(JSON.Writer.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Dict{String, Base.Dict{K, V} where V where K}})
precompile(Tuple{typeof(PyCall.pycall), PyCall.PyObject, Type{PyCall.PyAny}, PyCall.PyObject})
precompile(Tuple{typeof(Base.iterate), Array{PyCall.PyObject, 1}, Int64})
precompile(Tuple{typeof(IJulia.undisplay), Tuple{PyPlot.Figure, PyCall.PyObject}})
precompile(Tuple{typeof(IJulia.metadata), Tuple{PyPlot.Figure, PyCall.PyObject}})
precompile(Tuple{typeof(IJulia.display_dict), Tuple{PyPlot.Figure, PyCall.PyObject}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/plain")}, Tuple{PyPlot.Figure, PyCall.PyObject}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("image/svg+xml")}, Tuple{PyPlot.Figure, PyCall.PyObject}})
precompile(Tuple{typeof(IJulia._showable), Array{Base.Multimedia.MIME{mime} where mime, 1}, Tuple{PyPlot.Figure, PyCall.PyObject}})
precompile(Tuple{IJulia.var"#26#27"{Tuple{PyPlot.Figure, PyCall.PyObject}}, Base.Multimedia.MIME{Symbol("image/png")}})
precompile(Tuple{IJulia.var"#26#27"{Tuple{PyPlot.Figure, PyCall.PyObject}}, Base.Multimedia.MIME{Symbol("image/jpeg")}})
precompile(Tuple{IJulia.var"#26#27"{Tuple{PyPlot.Figure, PyCall.PyObject}}, Base.Multimedia.MIME{Symbol("text/markdown")}})
precompile(Tuple{IJulia.var"#26#27"{Tuple{PyPlot.Figure, PyCall.PyObject}}, Base.Multimedia.MIME{Symbol("text/html")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/latex")}, Tuple{PyPlot.Figure, PyCall.PyObject}})
precompile(Tuple{IJulia.var"#26#27"{Tuple{PyPlot.Figure, PyCall.PyObject}}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v4+json")}})
precompile(Tuple{IJulia.var"#26#27"{Tuple{PyPlot.Figure, PyCall.PyObject}}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v3+json")}})
precompile(Tuple{IJulia.var"#26#27"{Tuple{PyPlot.Figure, PyCall.PyObject}}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v2+json")}})
precompile(Tuple{IJulia.var"#26#27"{Tuple{PyPlot.Figure, PyCall.PyObject}}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v5+json")}})
precompile(Tuple{IJulia.var"#26#27"{Tuple{PyPlot.Figure, PyCall.PyObject}}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v4+json")}})
precompile(Tuple{IJulia.var"#26#27"{Tuple{PyPlot.Figure, PyCall.PyObject}}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v3+json")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("application/vnd.dataresource+json")}, Tuple{PyPlot.Figure, PyCall.PyObject}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("application/vnd.plotly.v1+json")}, Tuple{PyPlot.Figure, PyCall.PyObject}})
precompile(Tuple{typeof(Base.getproperty), DataFrames.DataFrame, Symbol})
precompile(Tuple{typeof(Base.contains), String})
precompile(Tuple{typeof(PyCall.pyany_toany), Type})
precompile(Tuple{typeof(Base.reverse), Tuple{Int64}})
precompile(Tuple{typeof(Base.cconvert), Type{Ptr{PyCall.PyObject_struct}}, Ptr{Nothing}})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{PyCall.PyObject_struct}}, Ptr{Nothing}})
precompile(Tuple{typeof(Base.cconvert), Type, Base.RefValue{PyCall.PyMethodDef}})
precompile(Tuple{typeof(Base.convert), Type{Ref{PyCall.PyMethodDef}}, Base.RefValue{PyCall.PyMethodDef}})
precompile(Tuple{typeof(Base.cconvert), Type{Ptr{PyCall.PyObject_struct}}, PyCall.PyObject})
precompile(Tuple{typeof(PyCall.weakref_callback), Ptr{PyCall.PyObject_struct}, Ptr{PyCall.PyObject_struct}})
precompile(Tuple{PyCall.PyObject, Array{Int64, 1}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{LinearAlgebra.BLAS.LBTLibraryInfo, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Type{String}})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{String, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{LinearAlgebra.BLAS.LBTLibraryInfo, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.any), Function, Array{String, 1}})
precompile(Tuple{typeof(Base._any), Base.Fix2{typeof(Base.contains), String}, Array{String, 1}, Base.Colon})
precompile(Tuple{typeof(IJulia.undisplay), Array{PyCall.PyObject, 1}})
precompile(Tuple{typeof(IJulia.metadata), Array{PyCall.PyObject, 1}})
precompile(Tuple{typeof(IJulia.display_dict), Array{PyCall.PyObject, 1}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/plain")}, Array{PyCall.PyObject, 1}})
precompile(Tuple{typeof(Base.isassigned), Array{PyCall.PyObject, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.getindex), Array{PyCall.PyObject, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.alignment), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, PyCall.PyObject})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, PyCall.PyObject})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.Multimedia.MIME{Symbol("text/plain")}, PyCall.PyObject})
precompile(Tuple{typeof(Base.replace_in_print_matrix), Array{PyCall.PyObject, 1}, Int64, Int64, String})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("image/svg+xml")}, Array{PyCall.PyObject, 1}})
precompile(Tuple{typeof(IJulia._showable), Array{Base.Multimedia.MIME{mime} where mime, 1}, Array{PyCall.PyObject, 1}})
precompile(Tuple{IJulia.var"#26#27"{Array{PyCall.PyObject, 1}}, Base.Multimedia.MIME{Symbol("image/png")}})
precompile(Tuple{IJulia.var"#26#27"{Array{PyCall.PyObject, 1}}, Base.Multimedia.MIME{Symbol("image/jpeg")}})
precompile(Tuple{IJulia.var"#26#27"{Array{PyCall.PyObject, 1}}, Base.Multimedia.MIME{Symbol("text/markdown")}})
precompile(Tuple{IJulia.var"#26#27"{Array{PyCall.PyObject, 1}}, Base.Multimedia.MIME{Symbol("text/html")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/latex")}, Array{PyCall.PyObject, 1}})
precompile(Tuple{IJulia.var"#26#27"{Array{PyCall.PyObject, 1}}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v4+json")}})
precompile(Tuple{IJulia.var"#26#27"{Array{PyCall.PyObject, 1}}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v3+json")}})
precompile(Tuple{IJulia.var"#26#27"{Array{PyCall.PyObject, 1}}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v2+json")}})
precompile(Tuple{IJulia.var"#26#27"{Array{PyCall.PyObject, 1}}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v5+json")}})
precompile(Tuple{IJulia.var"#26#27"{Array{PyCall.PyObject, 1}}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v4+json")}})
precompile(Tuple{IJulia.var"#26#27"{Array{PyCall.PyObject, 1}}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v3+json")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("application/vnd.dataresource+json")}, Array{PyCall.PyObject, 1}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("application/vnd.plotly.v1+json")}, Array{PyCall.PyObject, 1}})
precompile(Tuple{typeof(IJulia.undisplay), PyPlot.Figure})
precompile(Tuple{typeof(IJulia.metadata), PyPlot.Figure})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(IJulia.undisplay), Nothing})
precompile(Tuple{typeof(Markdown.mdexpr), String})
precompile(Tuple{typeof(Markdown.hashheader), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
precompile(Tuple{typeof(Markdown.list), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
precompile(Tuple{typeof(Markdown.fencedcode), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
precompile(Tuple{typeof(Markdown.blockquote), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
precompile(Tuple{typeof(Markdown.admonition), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
precompile(Tuple{typeof(Markdown.blocktex), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
precompile(Tuple{typeof(Markdown.blockinterp), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
precompile(Tuple{typeof(Markdown.indentcode), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
precompile(Tuple{typeof(Markdown.footnote), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
precompile(Tuple{typeof(Markdown.github_table), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
precompile(Tuple{Type{Markdown.Table}, Array{Any, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(IJulia.undisplay), Markdown.MD})
precompile(Tuple{typeof(IJulia.metadata), Markdown.MD})
precompile(Tuple{Base64.var"#3#4"{Base64.Base64EncodePipe}, Base64.Buffer})
precompile(Tuple{typeof(IJulia.display_dict), Markdown.MD})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/plain")}, Markdown.MD})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:len,), Tuple{typeof(Markdown.ansi_length)}}, Symbol})
precompile(Tuple{typeof(Markdown.term), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Markdown.Table, Int64})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{Any, 1}, 1}, Base.Generator{Array{Array{Any, 1}, 1}, Markdown.var"#65#66"{Markdown.var"#80#82"{Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}}}}})
precompile(Tuple{Markdown.var"#80#82"{Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}}, Array{Any, 1}})
precompile(Tuple{Markdown.var"#padcells!##kw", NamedTuple{(:len,), Tuple{typeof(Markdown.ansi_length)}}, typeof(Markdown.padcells!), Array{Array{String, 1}, 1}, Array{Symbol, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Markdown.var"#65#66"{typeof(Markdown.ansi_length)}, Array{Array{String, 1}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{String, 1}, 1}, Base.Generator{Array{Array{String, 1}, 1}, Markdown.var"#65#66"{typeof(Markdown.ansi_length)}}})
precompile(Tuple{typeof(Base.convert), Type{Array{Array{Int64, 1}, 1}}, Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.vcat), Int64, Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.reduce), Function, Array{Any, 1}})
precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{typeof(Base.identity), Markdown.var"#68#69"}, Type{Any}})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), Markdown.var"#68#69", Base.IndexLinear, Array{Any, 1}})
precompile(Tuple{Markdown.var"#68#69", Int64, Array{Int64, 1}})
precompile(Tuple{Markdown.var"#68#69", Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Markdown.padding), Int64, Int64, Symbol})
precompile(Tuple{typeof(Base.:(^)), String, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Array{String, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.join), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{String, 1}, String})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Markdown.var"#81#83"{Array{Array{String, 1}, 1}, Int64}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, Markdown.var"#81#83"{Array{Array{String, 1}, 1}, Int64}}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("image/svg+xml")}, Markdown.MD})
precompile(Tuple{typeof(IJulia._showable), Array{Base.Multimedia.MIME{mime} where mime, 1}, Markdown.MD})
precompile(Tuple{IJulia.var"#26#27"{Markdown.MD}, Base.Multimedia.MIME{Symbol("image/png")}})
precompile(Tuple{IJulia.var"#26#27"{Markdown.MD}, Base.Multimedia.MIME{Symbol("image/jpeg")}})
precompile(Tuple{IJulia.var"#26#27"{Markdown.MD}, Base.Multimedia.MIME{Symbol("text/markdown")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/markdown")}, Markdown.MD})
precompile(Tuple{typeof(IJulia.display_mimestring), Base.Multimedia.MIME{Symbol("text/markdown")}, Markdown.MD})
precompile(Tuple{Type{NamedTuple{(:len, :min), T} where T<:Tuple}, Tuple{typeof(Base.length), Int64}})
precompile(Tuple{typeof(Markdown.plain), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Markdown.Table})
precompile(Tuple{typeof(Base._similar_or_copy), Nothing, Type{Any}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{Any, 1}, 1}, Base.Generator{Array{Array{Any, 1}, 1}, Markdown.var"#65#66"{Markdown.var"#71#73"}}})
precompile(Tuple{Markdown.var"#71#73", Array{Any, 1}})
precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}})
precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, String})
precompile(Tuple{Markdown.var"#padcells!##kw", NamedTuple{(:len, :min), Tuple{typeof(Base.length), Int64}}, typeof(Markdown.padcells!), Array{Array{String, 1}, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.axes), Array{Array{String, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.axes), Array{String, 1}, Int64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Markdown.var"#72#74"{Markdown.Table, Array{Array{String, 1}, 1}, Int64}, Base.OneTo{Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.OneTo{Int64}, Markdown.var"#72#74"{Markdown.Table, Array{Array{String, 1}, 1}, Int64}}})
precompile(Tuple{typeof(Base.string), Base.Multimedia.MIME{Symbol("text/markdown")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("text/latex")}, Markdown.MD})
precompile(Tuple{typeof(IJulia.display_mimestring), Base.Multimedia.MIME{Symbol("text/latex")}, Markdown.MD})
precompile(Tuple{typeof(Markdown.latex), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Markdown.Table})
precompile(Tuple{typeof(Markdown.latexinline), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}})
precompile(Tuple{typeof(Markdown.latexinline), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String})
precompile(Tuple{IJulia.var"#26#27"{Markdown.MD}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v4+json")}})
precompile(Tuple{IJulia.var"#26#27"{Markdown.MD}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v3+json")}})
precompile(Tuple{IJulia.var"#26#27"{Markdown.MD}, Base.Multimedia.MIME{Symbol("application/vnd.vegalite.v2+json")}})
precompile(Tuple{IJulia.var"#26#27"{Markdown.MD}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v5+json")}})
precompile(Tuple{IJulia.var"#26#27"{Markdown.MD}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v4+json")}})
precompile(Tuple{IJulia.var"#26#27"{Markdown.MD}, Base.Multimedia.MIME{Symbol("application/vnd.vega.v3+json")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("application/vnd.dataresource+json")}, Markdown.MD})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("application/vnd.plotly.v1+json")}, Markdown.MD})
precompile(Tuple{typeof(Base.:(-)), Array{Int64, 1}})
precompile(Tuple{typeof(Base.prettyprint_getunits), Int64, Int64, Int64})
precompile(Tuple{typeof(Base.Ryu.writefixed), Float64, Int64})
precompile(Tuple{typeof(Base.println), IJulia.IJuliaStdio{Base.PipeEndpoint}, String})
precompile(Tuple{typeof(Base.uv_readcb), Ptr{Nothing}, Int64, Ptr{Nothing}})
precompile(Tuple{Base.var"#readcb_specialized#677", Base.PipeEndpoint, Int64, UInt64})
precompile(Tuple{typeof(Requires.__init__)})
precompile(Tuple{typeof(Requires.loadpkg), Base.PkgId})
precompile(Tuple{typeof(FileIO.__init__)})
precompile(Tuple{typeof(Requires.isprecompiling)})
precompile(Tuple{typeof(Base.:(==)), Int32, Int64})
precompile(Tuple{typeof(Requires.listenpkg), Any, Base.PkgId})
precompile(Tuple{typeof(Requires.loaded), Base.PkgId})
precompile(Tuple{typeof(Requires.callbacks), Base.PkgId})
precompile(Tuple{typeof(Libiconv_jll.__init__)})
precompile(Tuple{typeof(Libiconv_jll.find_artifact_dir)})
precompile(Tuple{typeof(Artifacts._artifact_str), Module, String, Base.SubString{String}, String, Base.Dict{String, Any}, Base.SHA1, Base.BinaryPlatforms.Platform, Any})
precompile(Tuple{typeof(Libffi_jll.__init__)})
precompile(Tuple{typeof(Libffi_jll.find_artifact_dir)})
precompile(Tuple{typeof(CompilerSupportLibraries_jll.__init__)})
precompile(Tuple{typeof(Zlib_jll.__init__)})
precompile(Tuple{typeof(XML2_jll.__init__)})
precompile(Tuple{typeof(XML2_jll.find_artifact_dir)})
precompile(Tuple{typeof(Gettext_jll.__init__)})
precompile(Tuple{typeof(Gettext_jll.find_artifact_dir)})
precompile(Tuple{typeof(PCRE2_jll.__init__)})
precompile(Tuple{typeof(Glib_jll.__init__)})
precompile(Tuple{typeof(Glib_jll.find_artifact_dir)})
precompile(Tuple{typeof(Pixman_jll.__init__)})
precompile(Tuple{typeof(Pixman_jll.find_artifact_dir)})
precompile(Tuple{typeof(libpng_jll.__init__)})
precompile(Tuple{typeof(libpng_jll.find_artifact_dir)})
precompile(Tuple{typeof(Bzip2_jll.__init__)})
precompile(Tuple{typeof(Bzip2_jll.find_artifact_dir)})
precompile(Tuple{typeof(FreeType2_jll.__init__)})
precompile(Tuple{typeof(FreeType2_jll.find_artifact_dir)})
precompile(Tuple{typeof(Expat_jll.__init__)})
precompile(Tuple{typeof(Expat_jll.find_artifact_dir)})
precompile(Tuple{typeof(Fontconfig_jll.__init__)})
precompile(Tuple{typeof(Fontconfig_jll.find_artifact_dir)})
precompile(Tuple{typeof(Base.getindex), Base.EnvDict, String})
precompile(Tuple{typeof(LZO_jll.__init__)})
precompile(Tuple{typeof(LZO_jll.find_artifact_dir)})
precompile(Tuple{typeof(Cairo_jll.__init__)})
precompile(Tuple{typeof(Cairo_jll.find_artifact_dir)})
precompile(Tuple{typeof(FriBidi_jll.__init__)})
precompile(Tuple{typeof(FriBidi_jll.find_artifact_dir)})
precompile(Tuple{typeof(Graphite2_jll.__init__)})
precompile(Tuple{typeof(Graphite2_jll.find_artifact_dir)})
precompile(Tuple{typeof(HarfBuzz_jll.__init__)})
precompile(Tuple{typeof(HarfBuzz_jll.find_artifact_dir)})
precompile(Tuple{typeof(Pango_jll.__init__)})
precompile(Tuple{typeof(Pango_jll.find_artifact_dir)})
precompile(Tuple{typeof(JpegTurbo_jll.__init__)})
precompile(Tuple{typeof(JpegTurbo_jll.find_artifact_dir)})
precompile(Tuple{typeof(LERC_jll.__init__)})
precompile(Tuple{typeof(LERC_jll.find_artifact_dir)})
precompile(Tuple{typeof(Zstd_jll.__init__)})
precompile(Tuple{typeof(Zstd_jll.find_artifact_dir)})
precompile(Tuple{typeof(Libtiff_jll.__init__)})
precompile(Tuple{typeof(Libtiff_jll.find_artifact_dir)})
precompile(Tuple{typeof(gdk_pixbuf_jll.__init__)})
precompile(Tuple{typeof(gdk_pixbuf_jll.find_artifact_dir)})
precompile(Tuple{typeof(Libepoxy_jll.__init__)})
precompile(Tuple{typeof(Libepoxy_jll.find_artifact_dir)})
precompile(Tuple{typeof(ATK_jll.__init__)})
precompile(Tuple{typeof(ATK_jll.find_artifact_dir)})
precompile(Tuple{typeof(iso_codes_jll.__init__)})
precompile(Tuple{typeof(iso_codes_jll.find_artifact_dir)})
precompile(Tuple{typeof(GTK3_jll.__init__)})
precompile(Tuple{typeof(GTK3_jll.find_artifact_dir)})
precompile(Tuple{typeof(hicolor_icon_theme_jll.__init__)})
precompile(Tuple{typeof(hicolor_icon_theme_jll.find_artifact_dir)})
precompile(Tuple{typeof(adwaita_icon_theme_jll.__init__)})
precompile(Tuple{typeof(adwaita_icon_theme_jll.find_artifact_dir)})
precompile(Tuple{typeof(Librsvg_jll.__init__)})
precompile(Tuple{typeof(Librsvg_jll.find_artifact_dir)})
precompile(Tuple{typeof(OpenLibm_jll.__init__)})
precompile(Tuple{typeof(Gtk.GLib.GClosureMarshal), Ptr{Nothing}, Ptr{Gtk.GLib.GValue}, UInt32, Ptr{Gtk.GLib.GValue}, Ptr{Nothing}, Ptr{Nothing}})
precompile(Tuple{typeof(Gtk.GLib.uv_prepare), Ptr{Nothing}, Ptr{Int32}})
precompile(Tuple{typeof(Gtk.GLib.uv_check), Ptr{Nothing}})
precompile(Tuple{typeof(Gtk.GLib.uv_dispatch), Ptr{Nothing}, Ptr{Nothing}, Int64})
precompile(Tuple{typeof(Gtk.GLib.g_yield), UInt64})
precompile(Tuple{typeof(Gtk.GLib.__init__)})
precompile(Tuple{Type{NamedTuple{(:imported,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:imported,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:recursive,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(Base.rem), UInt16, Type{UInt32}})
precompile(Tuple{typeof(Gtk.__init__)})
precompile(Tuple{typeof(Base.promote_typeof), String, String, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), String, Nothing})
precompile(Tuple{typeof(Base.promote_rule), Type{Union{Nothing, String}}, Type})
precompile(Tuple{typeof(Base.promote_type), Type{String}, Type{Union{Nothing, String}}})
precompile(Tuple{Type{Array{Union{Nothing, String}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Union{Nothing, String}, 1}, Tuple{String, String, String, Nothing}})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Union{Nothing, String}, 1}, String})
precompile(Tuple{typeof(Librsvg_jll.is_available)})
precompile(Tuple{typeof(PyPlot.display_figs)})
precompile(Tuple{typeof(Gtk.gtk_main)})
precompile(Tuple{typeof(Gtk.GLib.g_sigatom), Any})
precompile(Tuple{Gtk.var"#253#254"})
precompile(Tuple{typeof(Base.getproperty), Gtk.GLib._GPollFD, Symbol})
precompile(Tuple{typeof(Base.:(!=)), UInt16, Int64})
precompile(Tuple{typeof(Base.Multimedia.display)})
precompile(Tuple{typeof(IJulia.execute_request), ZMQ.Socket, IJulia.Msg})
precompile(Tuple{typeof(Gtk.is_eventloop_running)})
precompile(Tuple{Type{NamedTuple{(:wait_stopped,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{Gtk.var"#enable_eventloop##kw", NamedTuple{(:wait_stopped,), Tuple{Bool}}, typeof(Gtk.enable_eventloop), Bool})
precompile(Tuple{Gtk.var"#341#343"})
precompile(Tuple{typeof(Base._uv_hook_close), Base.Timer})
precompile(Tuple{typeof(Base.task_done_hook), Task})
precompile(Tuple{typeof(Profile.start_timer)})
precompile(Tuple{typeof(Base.collect), Base.Generator{PyCall.PyDict{Symbol, PyCall.PyObject, true}, PyCall.var"#57#58"{typeof(PyPlot.figure)}}})
precompile(Tuple{typeof(Profile.stop_timer)})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:wait_stopped,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(Base.:(<)), UInt32, UInt32})
precompile(Tuple{typeof(Base.:(>)), UInt32, UInt32})
precompile(Tuple{typeof(Base.:(!=)), UInt32, UInt32})
precompile(Tuple{typeof(Base.something), Nothing, Base.UnitRange{UInt64}})
precompile(Tuple{Type{NamedTuple{(:ignore_equal_values,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(Base.keys), Base.IdDict{Any, Any}})
precompile(Tuple{Gtk.GLib.var"##s9#1", Any, Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Gtk.GLib.bytestring), String})
precompile(Tuple{typeof(Base.:(*)), Bool, Int64})
precompile(Tuple{Type{NamedTuple{(:by, :rev), T} where T<:Tuple}, Tuple{typeof(Base.first), Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:by, :rev), Tuple{typeof(Base.first), Bool}}, Symbol})
precompile(Tuple{Type{Graphics.BoundingBox}, Int64, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.convert), Type{Graphics.BoundingBox}, Graphics.BoundingBox})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Bool}, Bool})
precompile(Tuple{typeof(Base._compute_eltype), Any})
precompile(Tuple{typeof(Base.uvfinalize), Base.Timer})
precompile(Tuple{typeof(ProfileView.view)})
precompile(Tuple{ProfileView.var"#view##kw", NamedTuple{(:lidict,), Tuple{Base.Dict{UInt64, Array{Base.StackTraces.StackFrame, 1}}}}, typeof(ProfileView.view), FlameGraphs.FlameColors, Array{UInt64, 1}})
precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:data,), Tuple{Array{UInt64, 1}}}}})
precompile(Tuple{typeof(Gtk.GLib._gc_unref), Any, Ptr{Nothing}})
precompile(Tuple{typeof(ProfileView.open_cb), Ptr{Gtk.GLib.GObject}, Tuple{Gtk.GtkCanvas, Observables.Observable{LeftChildRightSiblingTrees.Node{FlameGraphs.NodeData}}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}}})
precompile(Tuple{typeof(ProfileView.save_as_cb), Ptr{Gtk.GLib.GObject}, Tuple{Gtk.GtkCanvas, Array{UInt64, 1}, Base.Dict{UInt64, Array{Base.StackTraces.StackFrame, 1}}, LeftChildRightSiblingTrees.Node{FlameGraphs.NodeData}}})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkMessageDialogLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkMessageDialogLeaf})
precompile(Tuple{typeof(ProfileView.info_cb), Ptr{Gtk.GLib.GObject}, Tuple{}})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkWindowLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkWindowLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkBoxLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkBoxLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkLabelLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkLabelLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkSeparatorToolItemLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkSeparatorToolItemLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkEntryLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkEntryLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkToolItemLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkToolItemLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkToolButtonLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkToolButtonLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkToolbarLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkToolbarLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkFrameLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkFrameLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkCanvas})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkCanvas})
precompile(Tuple{typeof(Gtk.GLib.gc_unref_weak), Gtk.GtkNotebookLeaf})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Gtk.GtkNotebookLeaf})
precompile(Tuple{ProfileView.var"##view#2", Base.Dict{UInt64, Array{Base.StackTraces.StackFrame, 1}}, Bool, Bool, Symbol, Array{Tuple{Symbol, Symbol}, 1}, Bool, Bool, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(ProfileView.view), FlameGraphs.FlameColors, Array{UInt64, 1}})
precompile(Tuple{Base.Sort.var"##sortperm#12", Base.Sort.QuickSortAlg, Function, Function, Nothing, Base.Order.ForwardOrdering, typeof(Base.sortperm), Array{Base.StackTraces.StackFrame, 1}})
precompile(Tuple{Type{Base.Dict{Symbol, Base.Dict{Symbol, LeftChildRightSiblingTrees.Node{FlameGraphs.NodeData}}}}, Pair{Symbol, Base.Dict{Symbol, LeftChildRightSiblingTrees.Node{FlameGraphs.NodeData}}}})
precompile(Tuple{ProfileView.var"#view##kw", NamedTuple{(:data, :lidict), Tuple{Array{UInt64, 1}, Base.Dict{UInt64, Array{Base.StackTraces.StackFrame, 1}}}}, typeof(ProfileView.view), FlameGraphs.FlameColors, Base.Dict{Symbol, Base.Dict{Symbol, LeftChildRightSiblingTrees.Node{FlameGraphs.NodeData}}}})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Gtk.GLib.GObject}}, Gtk.GtkNotebookLeaf})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Union{WeakRef, Gtk.GLib.GObject}, Bool}, WeakRef})
precompile(Tuple{typeof(Base.hash), Any, UInt64})
precompile(Tuple{typeof(Gtk.notify_realize), Ptr{Gtk.GLib.GObject}, Gtk.GtkCanvas})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(Gtk.notify_realize), Type{Nothing}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ref{Gtk.GtkCanvas}}}})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Gtk.GLib.GObject}}, Gtk.GtkCanvas})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkCanvas, Gtk.GtkNotebookLeaf})
precompile(Tuple{typeof(Base.cconvert), Type{Ptr{Nothing}}, Base.CFunction})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Nothing}}, Base.CFunction})
precompile(Tuple{typeof(Gtk.notify_unrealize), Ptr{Gtk.GLib.GObject}, Gtk.GtkCanvas})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(Gtk.notify_unrealize), Type{Nothing}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ref{Gtk.GtkCanvas}}}})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(Gtk.notify_resize), Type{Nothing}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkRectangle}, Ref{Gtk.GtkCanvas}}}})
precompile(Tuple{typeof(Gtk.canvas_on_draw_event), Ptr{Gtk.GLib.GObject}, Ptr{Nothing}, Gtk.GtkCanvas})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(Gtk.canvas_on_draw_event), Type{Int32}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ptr{Nothing}, Ref{Gtk.GtkCanvas}}}})
precompile(Tuple{typeof(Gtk.mousedown_cb), Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventButton}, Gtk.MouseHandler})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(Gtk.mousedown_cb), Type{Int32}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventButton}, Ref{Gtk.MouseHandler}}}})
precompile(Tuple{typeof(Gtk.mouseup_cb), Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventButton}, Gtk.MouseHandler})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(Gtk.mouseup_cb), Type{Int32}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventButton}, Ref{Gtk.MouseHandler}}}})
precompile(Tuple{typeof(Gtk.notify_motion), Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventMotion}, Gtk.Gtk_signal_motion{Gtk.MouseHandler}})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(Gtk.notify_motion), Type{Int32}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventMotion}, Ref{Gtk.Gtk_signal_motion{Gtk.MouseHandler}}}}})
precompile(Tuple{typeof(Gtk.mousescroll_cb), Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventScroll}, Gtk.MouseHandler})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(Gtk.mousescroll_cb), Type{Int32}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventScroll}, Ref{Gtk.MouseHandler}}}})
precompile(Tuple{typeof(Gtk.GLib.gc_unref), Any})
precompile(Tuple{typeof(GtkObservables.mousedown_cb), Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventButton}, GtkObservables.MouseHandler{GtkObservables.UserUnit}})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(GtkObservables.mousedown_cb), Type{Int32}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventButton}, Ref{GtkObservables.MouseHandler{GtkObservables.UserUnit}}}}})
precompile(Tuple{typeof(GtkObservables.mouseup_cb), Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventButton}, GtkObservables.MouseHandler{GtkObservables.UserUnit}})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(GtkObservables.mouseup_cb), Type{Int32}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventButton}, Ref{GtkObservables.MouseHandler{GtkObservables.UserUnit}}}}})
precompile(Tuple{typeof(Gtk.notify_motion), Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventMotion}, Gtk.Gtk_signal_motion{GtkObservables.MouseHandler{GtkObservables.UserUnit}}})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(Gtk.notify_motion), Type{Int32}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventMotion}, Ref{Gtk.Gtk_signal_motion{GtkObservables.MouseHandler{GtkObservables.UserUnit}}}}}})
precompile(Tuple{typeof(GtkObservables.mousescroll_cb), Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventScroll}, GtkObservables.MouseHandler{GtkObservables.UserUnit}})
precompile(Tuple{typeof(Gtk.GLib.cfunction_), typeof(GtkObservables.mousescroll_cb), Type{Int32}, Type{Tuple{Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventScroll}, Ref{GtkObservables.MouseHandler{GtkObservables.UserUnit}}}}})
precompile(Tuple{typeof(Gtk.GLib._signal_connect), Function, Gtk.GtkCanvas, String, Bool, Bool, Nothing, Nothing})
precompile(Tuple{typeof(Base.:(+)), Ptr{Nothing}, Int64})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Gtk.GLib.GObject}}, Gtk.GtkFrameLeaf})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Gtk.GLib.GObject}}, Gtk.GtkToolbarLeaf})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Gtk.GLib.GObject}}, Gtk.GtkToolButtonLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkToolButtonLeaf, Gtk.GtkCanvas})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkToolButtonLeaf, Gtk.GtkToolbarLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkToolButtonLeaf, Gtk.GtkToolButtonLeaf})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Gtk.GLib.GObject}}, Gtk.GtkToolItemLeaf})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Gtk.GLib.GObject}}, Gtk.GtkEntryLeaf})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Gtk.GLib.GObject}}, Gtk.GtkSeparatorToolItemLeaf})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Gtk.GLib.GObject}}, Gtk.GtkBoxLeaf})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Gtk.GLib.GObject}}, Gtk.GtkLabelLeaf})
precompile(Tuple{typeof(Observables.listeners), Observables.Observable{LeftChildRightSiblingTrees.Node{FlameGraphs.NodeData}}})
precompile(Tuple{Type{Base.Order.By{typeof(Base.first), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}}, Function, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})
precompile(Tuple{Type{Base.Order.ReverseOrdering{Fwd} where Fwd<:Base.Order.Ordering}, Base.Order.By{typeof(Base.first), Base.Order.ForwardOrdering}})
precompile(Tuple{typeof(Base.Sort.searchsortedlast), Array{Pair{Int64, Any}, 1}, Int64, Base.Order.By{typeof(Base.first), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Function})
precompile(Tuple{typeof(Core.convert), Type{ProfileView.var"#26#27"{Int64, FlameGraphs.FlameColors, GtkObservables.Canvas{GtkObservables.UserUnit}, Tuple{Gtk.GtkToolButtonLeaf, Gtk.GtkToolButtonLeaf, Gtk.GtkToolButtonLeaf, Gtk.GtkEntryLeaf}, Symbol}}, ProfileView.var"#26#27"{Int64, FlameGraphs.FlameColors, GtkObservables.Canvas{GtkObservables.UserUnit}, Tuple{Gtk.GtkToolButtonLeaf, Gtk.GtkToolButtonLeaf, Gtk.GtkToolButtonLeaf, Gtk.GtkEntryLeaf}, Symbol}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, ProfileView.var"#26#27"{Int64, FlameGraphs.FlameColors, GtkObservables.Canvas{GtkObservables.UserUnit}, Tuple{Gtk.GtkToolButtonLeaf, Gtk.GtkToolButtonLeaf, Gtk.GtkToolButtonLeaf, Gtk.GtkEntryLeaf}, Symbol}}})
precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{LeftChildRightSiblingTrees.Node{FlameGraphs.NodeData}}, Symbol, LeftChildRightSiblingTrees.Node{FlameGraphs.NodeData}})
precompile(Tuple{typeof(Base.convert), Type{LeftChildRightSiblingTrees.Node{FlameGraphs.NodeData}}, LeftChildRightSiblingTrees.Node{FlameGraphs.NodeData}})
precompile(Tuple{typeof(ProfileView.zoom_fit_cb), Ptr{Gtk.GLib.GObject}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}})
precompile(Tuple{typeof(ProfileView.zoom_out_cb), Ptr{Gtk.GLib.GObject}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}})
precompile(Tuple{typeof(ProfileView.zoom_in_cb), Ptr{Gtk.GLib.GObject}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}})
precompile(Tuple{ProfileView.var"#26#27"{Int64, FlameGraphs.FlameColors, GtkObservables.Canvas{GtkObservables.UserUnit}, Tuple{Gtk.GtkToolButtonLeaf, Gtk.GtkToolButtonLeaf, Gtk.GtkToolButtonLeaf, Gtk.GtkEntryLeaf}, Symbol}, LeftChildRightSiblingTrees.Node{FlameGraphs.NodeData}})
precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GtkObservables.MouseButton{GtkObservables.UserUnit}}})
precompile(Tuple{typeof(Core.convert), Type{GtkObservables.var"#199#203"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, typeof(GtkObservables.zrb_init_default), typeof(GtkObservables.zrb_reset_default), Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, Observables.Observable{Bool}, Observables.Observable{Bool}}}, GtkObservables.var"#199#203"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, typeof(GtkObservables.zrb_init_default), typeof(GtkObservables.zrb_reset_default), Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, Observables.Observable{Bool}, Observables.Observable{Bool}}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GtkObservables.var"#199#203"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, typeof(GtkObservables.zrb_init_default), typeof(GtkObservables.zrb_reset_default), Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, Observables.Observable{Bool}, Observables.Observable{Bool}}}})
precompile(Tuple{typeof(Core.convert), Type{GtkObservables.var"#200#204"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, Observables.Observable{Bool}}}, GtkObservables.var"#200#204"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, Observables.Observable{Bool}}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GtkObservables.var"#200#204"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, Observables.Observable{Bool}}}})
precompile(Tuple{typeof(Core.convert), Type{GtkObservables.var"#201#205"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, GtkObservables.var"#update_zr#202"{Observables.Observable{GtkObservables.ZoomRegion{Float64}}, Observables.Observable{Bool}}, Observables.Observable{Bool}}}, GtkObservables.var"#201#205"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, GtkObservables.var"#update_zr#202"{Observables.Observable{GtkObservables.ZoomRegion{Float64}}, Observables.Observable{Bool}}, Observables.Observable{Bool}}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GtkObservables.var"#201#205"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, GtkObservables.var"#update_zr#202"{Observables.Observable{GtkObservables.ZoomRegion{Float64}}, Observables.Observable{Bool}}, Observables.Observable{Bool}}}})
precompile(Tuple{typeof(Core.convert), Type{GtkObservables.var"#189#192"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, typeof(GtkObservables.pandrag_init_default), Base.RefValue{Array{Float64, 2}}, Base.RefValue{GtkObservables.XY{IntervalSets.Interval{:closed, :closed, Float64}}}, Base.RefValue{GtkObservables.XY{GtkObservables.DeviceUnit}}, Observables.Observable{Bool}}}, GtkObservables.var"#189#192"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, typeof(GtkObservables.pandrag_init_default), Base.RefValue{Array{Float64, 2}}, Base.RefValue{GtkObservables.XY{IntervalSets.Interval{:closed, :closed, Float64}}}, Base.RefValue{GtkObservables.XY{GtkObservables.DeviceUnit}}, Observables.Observable{Bool}}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GtkObservables.var"#189#192"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, typeof(GtkObservables.pandrag_init_default), Base.RefValue{Array{Float64, 2}}, Base.RefValue{GtkObservables.XY{IntervalSets.Interval{:closed, :closed, Float64}}}, Base.RefValue{GtkObservables.XY{GtkObservables.DeviceUnit}}, Observables.Observable{Bool}}}})
precompile(Tuple{typeof(Core.convert), Type{GtkObservables.var"#190#193"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, Base.RefValue{Array{Float64, 2}}, Base.RefValue{GtkObservables.XY{IntervalSets.Interval{:closed, :closed, Float64}}}, Base.RefValue{GtkObservables.XY{GtkObservables.DeviceUnit}}, Observables.Observable{Bool}}}, GtkObservables.var"#190#193"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, Base.RefValue{Array{Float64, 2}}, Base.RefValue{GtkObservables.XY{IntervalSets.Interval{:closed, :closed, Float64}}}, Base.RefValue{GtkObservables.XY{GtkObservables.DeviceUnit}}, Observables.Observable{Bool}}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GtkObservables.var"#190#193"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, Base.RefValue{Array{Float64, 2}}, Base.RefValue{GtkObservables.XY{IntervalSets.Interval{:closed, :closed, Float64}}}, Base.RefValue{GtkObservables.XY{GtkObservables.DeviceUnit}}, Observables.Observable{Bool}}}})
precompile(Tuple{typeof(Core.convert), Type{GtkObservables.var"#191#194"{GtkObservables.UserUnit, Observables.Observable{Bool}}}, GtkObservables.var"#191#194"{GtkObservables.UserUnit, Observables.Observable{Bool}}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GtkObservables.var"#191#194"{GtkObservables.UserUnit, Observables.Observable{Bool}}}})
precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GtkObservables.MouseScroll{GtkObservables.UserUnit}}})
precompile(Tuple{typeof(Core.convert), Type{GtkObservables.var"#196#198"{GtkObservables.UserUnit, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, GtkObservables.var"#195#197", Symbol, Float64, Bool, Observables.Observable{Bool}}}, GtkObservables.var"#196#198"{GtkObservables.UserUnit, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, GtkObservables.var"#195#197", Symbol, Float64, Bool, Observables.Observable{Bool}}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GtkObservables.var"#196#198"{GtkObservables.UserUnit, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, GtkObservables.var"#195#197", Symbol, Float64, Bool, Observables.Observable{Bool}}}})
precompile(Tuple{typeof(Core.convert), Type{GtkObservables.var"#184#188"{GtkObservables.UserUnit, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, GtkObservables.var"#181#185", GtkObservables.var"#182#186", Observables.Observable{Bool}}}, GtkObservables.var"#184#188"{GtkObservables.UserUnit, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, GtkObservables.var"#181#185", GtkObservables.var"#182#186", Observables.Observable{Bool}}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GtkObservables.var"#184#188"{GtkObservables.UserUnit, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, GtkObservables.var"#181#185", GtkObservables.var"#182#186", Observables.Observable{Bool}}}})
precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GtkObservables.ZoomRegion{Float64}}})
precompile(Tuple{typeof(Core.convert), Type{GtkObservables.var"#178#180"{GtkObservables.Canvas{GtkObservables.UserUnit}}}, GtkObservables.var"#178#180"{GtkObservables.Canvas{GtkObservables.UserUnit}}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GtkObservables.var"#178#180"{GtkObservables.Canvas{GtkObservables.UserUnit}}}})
precompile(Tuple{typeof(Core.convert), Type{ProfileView.var"#29#34"{FlameGraphs.FlameColors, GtkObservables.Canvas{GtkObservables.UserUnit}, Int64, Cairo.CairoSurfaceImage{ColorTypes.RGB24}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, ProfileView.var"#device_bb#32"{Symbol}, ProfileView.var"#gettag#31", Gtk.GtkEntryLeaf, Base.RefValue{Graphics.BoundingBox}, IndirectArrays.IndirectArray{Base.StackTraces.StackFrame, 2, Int64, Array{Int64, 2}, Array{Base.StackTraces.StackFrame, 1}}}}, ProfileView.var"#29#34"{FlameGraphs.FlameColors, GtkObservables.Canvas{GtkObservables.UserUnit}, Int64, Cairo.CairoSurfaceImage{ColorTypes.RGB24}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, ProfileView.var"#device_bb#32"{Symbol}, ProfileView.var"#gettag#31", Gtk.GtkEntryLeaf, Base.RefValue{Graphics.BoundingBox}, IndirectArrays.IndirectArray{Base.StackTraces.StackFrame, 2, Int64, Array{Int64, 2}, Array{Base.StackTraces.StackFrame, 1}}}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, ProfileView.var"#29#34"{FlameGraphs.FlameColors, GtkObservables.Canvas{GtkObservables.UserUnit}, Int64, Cairo.CairoSurfaceImage{ColorTypes.RGB24}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, ProfileView.var"#device_bb#32"{Symbol}, ProfileView.var"#gettag#31", Gtk.GtkEntryLeaf, Base.RefValue{Graphics.BoundingBox}, IndirectArrays.IndirectArray{Base.StackTraces.StackFrame, 2, Int64, Array{Int64, 2}, Array{Base.StackTraces.StackFrame, 1}}}}})
precompile(Tuple{typeof(Core.convert), Type{ProfileView.var"#30#35"{GtkObservables.Canvas{GtkObservables.UserUnit}, ProfileView.var"#gettag#31", IndirectArrays.IndirectArray{Base.StackTraces.StackFrame, 2, Int64, Array{Int64, 2}, Array{Base.StackTraces.StackFrame, 1}}}}, ProfileView.var"#30#35"{GtkObservables.Canvas{GtkObservables.UserUnit}, ProfileView.var"#gettag#31", IndirectArrays.IndirectArray{Base.StackTraces.StackFrame, 2, Int64, Array{Int64, 2}, Array{Base.StackTraces.StackFrame, 1}}}})
precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, ProfileView.var"#30#35"{GtkObservables.Canvas{GtkObservables.UserUnit}, ProfileView.var"#gettag#31", IndirectArrays.IndirectArray{Base.StackTraces.StackFrame, 2, Int64, Array{Int64, 2}, Array{Base.StackTraces.StackFrame, 1}}}}})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkLabelLeaf, Gtk.GtkToolButtonLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkCanvas, Gtk.GtkCanvas})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkToolItemLeaf, Gtk.GtkSeparatorToolItemLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkSeparatorToolItemLeaf, Gtk.GtkToolButtonLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkBoxLeaf, Gtk.GtkToolbarLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkBoxLeaf, Gtk.GtkToolButtonLeaf})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Gtk.GLib.GObject}}, Gtk.GtkWindowLeaf})
precompile(Tuple{typeof(Base.:(!=)), Task, Task})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Gtk.var"#245#246"{Gtk.GtkWindowLeaf}, Task}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Gtk.var"#245#246"{Gtk.GtkWindowLeaf}, Task}, Int64, Int64})
precompile(Tuple{Gtk.var"#245#246"{Gtk.GtkWindowLeaf}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Gtk.var"#247#248"{Gtk.GtkWindowLeaf}, Task}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Gtk.var"#247#248"{Gtk.GtkWindowLeaf}, Task}, Int64, Int64})
precompile(Tuple{Gtk.var"#247#248"{Gtk.GtkWindowLeaf}})
precompile(Tuple{typeof(Base.Multimedia.display), IJulia.InlineDisplay, PyPlot.Figure})
precompile(Tuple{typeof(Base.flush), IJulia.IJuliaStdio{Base.PipeEndpoint}})
precompile(Tuple{typeof(IJulia.send_stream), String})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("image/svg+xml")}, PyPlot.Figure})
precompile(Tuple{IJulia.var"#26#27"{PyPlot.Figure}, Base.Multimedia.MIME{Symbol("image/png")}})
precompile(Tuple{typeof(IJulia._showable), Base.Multimedia.MIME{Symbol("image/png")}, PyPlot.Figure})
precompile(Tuple{typeof(Gtk.GLib.delref), Gtk.GLib.GObject})
precompile(Tuple{typeof(Base.push!), Base.Set{Any}, Gtk.GtkBoxLeaf})
precompile(Tuple{typeof(Base.push!), Base.Set{Any}, Gtk.GtkLabelLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkBoxLeaf, Gtk.GtkBoxLeaf})
precompile(Tuple{typeof(Base.push!), Base.Set{Any}, Gtk.GtkSeparatorToolItemLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkSeparatorToolItemLeaf, Gtk.GtkBoxLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkSeparatorToolItemLeaf, Gtk.GtkLabelLeaf})
precompile(Tuple{typeof(Base.push!), Base.Set{Any}, Gtk.GtkToolItemLeaf})
precompile(Tuple{typeof(Base.push!), Base.Set{Any}, Gtk.GtkToolButtonLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkToolButtonLeaf, Gtk.GtkBoxLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkToolButtonLeaf, Gtk.GtkLabelLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkToolButtonLeaf, Gtk.GtkSeparatorToolItemLeaf})
precompile(Tuple{typeof(Base.hashindex), Gtk.GtkToolButtonLeaf, Int64})
precompile(Tuple{typeof(Base.hashindex), Gtk.GtkToolItemLeaf, Int64})
precompile(Tuple{typeof(Base.hashindex), Gtk.GtkBoxLeaf, Int64})
precompile(Tuple{typeof(Base.hashindex), Gtk.GtkLabelLeaf, Int64})
precompile(Tuple{typeof(Base.hashindex), Gtk.GtkSeparatorToolItemLeaf, Int64})
precompile(Tuple{typeof(Base.push!), Base.Set{Any}, Gtk.GtkToolbarLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkToolbarLeaf, Gtk.GtkBoxLeaf})
precompile(Tuple{typeof(Base.push!), Base.Set{Any}, Gtk.GtkFrameLeaf})
precompile(Tuple{Gtk.GLib.var"#22#23", Gtk.GLib.MutableTypes.MutableX{Gtk.GLib.GValue}})
precompile(Tuple{typeof(Base.push!), Base.Set{Any}, Gtk.GtkNotebookLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkSeparatorToolItemLeaf, Gtk.GtkToolItemLeaf})
precompile(Tuple{typeof(IJulia.display_mimestring), Base.Multimedia.MIME{Symbol("image/png")}, PyPlot.Figure})
precompile(Tuple{typeof(PyCall._pycall!), PyCall.PyObject, PyCall.PyObject, Tuple{Base.IOContext{Base64.Base64EncodePipe}}, Base.Pairs{Symbol, String, Tuple{Symbol, Symbol}, NamedTuple{(:format, :bbox_inches), Tuple{String, String}}}})
precompile(Tuple{typeof(Base.getindex), Base.Dict{AbstractString, Any}, String})
precompile(Tuple{typeof(PyCall.pyio_initialize)})
precompile(Tuple{typeof(Base.collect), Base.Generator{PyCall.PyDict{Symbol, PyCall.PyObject, true}, PyCall.var"#57#58"{PyCall.var"##__init__#312#77"{PyCall.var"##__init__#312#76#78"}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{PyCall.PyDict{Symbol, PyCall.PyObject, true}, PyCall.var"#57#58"{PyCall.var"##write#330#96"}}})
precompile(Tuple{PyCall.var"##write#330#96", PyCall.PyObject, String})
precompile(Tuple{typeof(Base.collect), Base.Generator{PyCall.PyDict{Symbol, PyCall.PyObject, true}, PyCall.var"#57#58"{PyCall.var"##flush#317#83"}}})
precompile(Tuple{PyCall.var"##flush#317#83", PyCall.PyObject})
precompile(Tuple{Type{Pair{A, B} where B where A}, Gtk.GtkToolButtonLeaf, Nothing})
precompile(Tuple{typeof(Base.:(!=)), Ptr{Gtk.GLib.GObject}, Ptr{Nothing}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{WeakRef, Gtk.GLib.GObject}, Bool}, Bool, Gtk.GtkToolButtonLeaf})
precompile(Tuple{Type{Pair{A, B} where B where A}, Gtk.GtkBoxLeaf, Nothing})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{WeakRef, Gtk.GLib.GObject}, Bool}, Bool, Gtk.GtkBoxLeaf})
precompile(Tuple{typeof(Base.setindex!), Array{Union{WeakRef, Gtk.GLib.GObject}, 1}, Gtk.GtkToolButtonLeaf, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Union{WeakRef, Gtk.GLib.GObject}, 1}, Gtk.GtkBoxLeaf, Int64})
precompile(Tuple{Type{Pair{A, B} where B where A}, Gtk.GtkLabelLeaf, Nothing})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{WeakRef, Gtk.GLib.GObject}, Bool}, Bool, Gtk.GtkLabelLeaf})
precompile(Tuple{Type{Pair{A, B} where B where A}, Gtk.GtkSeparatorToolItemLeaf, Nothing})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{WeakRef, Gtk.GLib.GObject}, Bool}, Bool, Gtk.GtkSeparatorToolItemLeaf})
precompile(Tuple{Type{Pair{A, B} where B where A}, Gtk.GtkFrameLeaf, Nothing})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{WeakRef, Gtk.GLib.GObject}, Bool}, Bool, Gtk.GtkFrameLeaf})
precompile(Tuple{Type{Pair{A, B} where B where A}, Gtk.GtkNotebookLeaf, Nothing})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkNotebookLeaf, Gtk.GtkFrameLeaf})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{WeakRef, Gtk.GLib.GObject}, Bool}, Bool, Gtk.GtkNotebookLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkToolButtonLeaf, Gtk.GtkFrameLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkToolButtonLeaf, Gtk.GtkNotebookLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkSeparatorToolItemLeaf, Gtk.GtkFrameLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkSeparatorToolItemLeaf, Gtk.GtkNotebookLeaf})
precompile(Tuple{Type{Pair{A, B} where B where A}, Gtk.GtkToolItemLeaf, Nothing})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{WeakRef, Gtk.GLib.GObject}, Bool}, Bool, Gtk.GtkToolItemLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkSeparatorToolItemLeaf, Gtk.GtkSeparatorToolItemLeaf})
precompile(Tuple{Type{Pair{A, B} where B where A}, Gtk.GtkToolbarLeaf, Nothing})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{WeakRef, Gtk.GLib.GObject}, Bool}, Bool, Gtk.GtkToolbarLeaf})
precompile(Tuple{Type{Cairo.CairoContext}, Cairo.CairoSurfaceBase{UInt32}})
precompile(Tuple{GtkObservables.var"#177#179"{ProfileView.var"#28#33"{Cairo.CairoSurfaceImage{ColorTypes.RGB24}, ProfileView.var"#device_bb#32"{Symbol}}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}}, Gtk.GtkCanvas})
precompile(Tuple{Type{Graphics.BoundingBox}, Int64, Float64, Int64, Float64})
precompile(Tuple{typeof(Base.getproperty), Cairo.CairoSurfaceBase{UInt32}, Symbol})
precompile(Tuple{typeof(GtkObservables.mousemove_cb), Ptr{Gtk.GLib.GObject}, Ptr{Gtk.GdkEventMotion}, GtkObservables.MouseHandler{GtkObservables.UserUnit}})
precompile(Tuple{GtkObservables.var"#200#204"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, Observables.Observable{Bool}}, GtkObservables.MouseButton{GtkObservables.UserUnit}})
precompile(Tuple{GtkObservables.var"#190#193"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, Base.RefValue{Array{Float64, 2}}, Base.RefValue{GtkObservables.XY{IntervalSets.Interval{:closed, :closed, Float64}}}, Base.RefValue{GtkObservables.XY{GtkObservables.DeviceUnit}}, Observables.Observable{Bool}}, GtkObservables.MouseButton{GtkObservables.UserUnit}})
precompile(Tuple{ProfileView.var"#29#34"{FlameGraphs.FlameColors, GtkObservables.Canvas{GtkObservables.UserUnit}, Int64, Cairo.CairoSurfaceImage{ColorTypes.RGB24}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, ProfileView.var"#device_bb#32"{Symbol}, ProfileView.var"#gettag#31", Gtk.GtkEntryLeaf, Base.RefValue{Graphics.BoundingBox}, IndirectArrays.IndirectArray{Base.StackTraces.StackFrame, 2, Int64, Array{Int64, 2}, Array{Base.StackTraces.StackFrame, 1}}}, GtkObservables.MouseButton{GtkObservables.UserUnit}})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Core.MethodInstance})
precompile(Tuple{typeof(Base.print_type_stacktrace), Base.GenericIOBuffer{Array{UInt8, 1}}, Type})
precompile(Tuple{GtkObservables.var"#199#203"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, typeof(GtkObservables.zrb_init_default), typeof(GtkObservables.zrb_reset_default), Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, Observables.Observable{Bool}, Observables.Observable{Bool}}, GtkObservables.MouseButton{GtkObservables.UserUnit}})
precompile(Tuple{GtkObservables.var"#189#192"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Observables.Observable{GtkObservables.ZoomRegion{Float64}}, typeof(GtkObservables.pandrag_init_default), Base.RefValue{Array{Float64, 2}}, Base.RefValue{GtkObservables.XY{IntervalSets.Interval{:closed, :closed, Float64}}}, Base.RefValue{GtkObservables.XY{GtkObservables.DeviceUnit}}, Observables.Observable{Bool}}, GtkObservables.MouseButton{GtkObservables.UserUnit}})
precompile(Tuple{ProfileView.var"#30#35"{GtkObservables.Canvas{GtkObservables.UserUnit}, ProfileView.var"#gettag#31", IndirectArrays.IndirectArray{Base.StackTraces.StackFrame, 2, Int64, Array{Int64, 2}, Array{Base.StackTraces.StackFrame, 1}}}, GtkObservables.MouseButton{GtkObservables.UserUnit}})
precompile(Tuple{InteractiveUtils.var"#14#24", Base.Cmd, String, Int64})
precompile(Tuple{InteractiveUtils.var"#2#3"{Bool, InteractiveUtils.var"#13#23", Base.Regex}, Base.Cmd, String, Int64})
precompile(Tuple{Base.var"#shell_escape##kw", NamedTuple{(:special,), Tuple{String}}, typeof(Base.shell_escape), String})
precompile(Tuple{Base.var"#487#488"{String}, Base.GenericIOBuffer{Array{UInt8, 1}}, String})
precompile(Tuple{InteractiveUtils.var"#2#3"{Bool, InteractiveUtils.var"#12#22", Base.Regex}, Base.Cmd, String, Int64})
precompile(Tuple{InteractiveUtils.var"#2#3"{Bool, InteractiveUtils.var"#11#21", Array{String, 1}}, Base.Cmd, String, Int64})
precompile(Tuple{typeof(Base.arg_gen), String, Base.SubString{String}, Vararg{Any}})
precompile(Tuple{typeof(Base.arg_gen), Base.SubString{String}, Int64})
precompile(Tuple{Type{NamedTuple{(:stderr,), T} where T<:Tuple}, Tuple{IJulia.IJuliaStdio{Base.PipeEndpoint}}})
precompile(Tuple{Base.var"#pipeline##kw", NamedTuple{(:stderr,), Tuple{IJulia.IJuliaStdio{Base.PipeEndpoint}}}, typeof(Base.pipeline), Base.Cmd})
precompile(Tuple{typeof(Base.setup_stdio), IJulia.IJuliaStdio{Base.PipeEndpoint}, Bool})
precompile(Tuple{typeof(Base.setproperty!), Base.Process, Symbol, Base.DevNull})
precompile(Tuple{GtkObservables.var"#201#205"{GtkObservables.UserUnit, GtkObservables.Canvas{GtkObservables.UserUnit}, Base.RefValue{Cairo.CairoContext}, GtkObservables.RubberBand{GtkObservables.UserUnit}, GtkObservables.var"#update_zr#202"{Observables.Observable{GtkObservables.ZoomRegion{Float64}}, Observables.Observable{Bool}}, Observables.Observable{Bool}}, GtkObservables.MouseButton{GtkObservables.UserUnit}})
precompile(Tuple{GtkObservables.var"#191#194"{GtkObservables.UserUnit, Observables.Observable{Bool}}, GtkObservables.MouseButton{GtkObservables.UserUnit}})
precompile(Tuple{typeof(Base.convert), Type{Gtk.GLib.GValue}, Gtk.GLib.GValue})
precompile(Tuple{typeof(Gtk.GLib.gvalue), Type{Base.WeakKeyDict{Gtk.GtkWindowLeaf, Nothing}}})
precompile(Tuple{typeof(Base.setindex!), Gtk.GLib.MutableTypes.MutableX{Gtk.GLib.GValue}, Type, Type{DataType}})
precompile(Tuple{typeof(Gtk.GLib.g_siginterruptible), Gtk.GLib.var"#90#92"{Ptr{Gtk.GLib.GValue}, UInt32, Ptr{Gtk.GLib.GValue}, Array{Any, 1}, Bool, ProfileView.var"#17#22"{Gtk.GtkWindowLeaf}, Ptr{Any}}, Any})
precompile(Tuple{Gtk.var"#17#18"})
precompile(Tuple{Gtk.var"#11#12"})
precompile(Tuple{Gtk.var"#5#6"})
precompile(Tuple{Gtk.GLib.var"#88#89"})
precompile(Tuple{Gtk.GLib.var"#80#81"})
precompile(Tuple{Gtk.GLib.var"#72#73", Ptr{Gtk.GLib.GValue}})
precompile(Tuple{ProfileView.var"#17#22"{Gtk.GtkWindowLeaf}, Gtk.GtkWindowLeaf})
precompile(Tuple{typeof(Gtk.GLib.gvalue), Type{Base.IdDict{Any, Any}}})
precompile(Tuple{typeof(Gtk.GLib.g_siginterruptible), Gtk.GLib.var"#90#92"{Ptr{Gtk.GLib.GValue}, UInt32, Ptr{Gtk.GLib.GValue}, Array{Any, 1}, Bool, GtkObservables.var"#206#207"{GtkObservables.Canvas{GtkObservables.UserUnit}}, Ptr{Any}}, Any})
precompile(Tuple{typeof(Base.isequal), WeakRef, Gtk.GtkToolItemLeaf})
precompile(Tuple{typeof(Base.isequal), Gtk.GtkNotebookLeaf, Gtk.GtkToolItemLeaf})
precompile(Tuple{GtkObservables.var"#206#207"{GtkObservables.Canvas{GtkObservables.UserUnit}}, Gtk.GtkNotebookLeaf})
precompile(Tuple{typeof(Gtk.GLib.g_siginterruptible), Gtk.GLib.var"#90#92"{Ptr{Gtk.GLib.GValue}, UInt32, Ptr{Gtk.GLib.GValue}, Array{Any, 1}, Bool, GtkObservables.var"#206#207"{Observables.ObserverFunction}, Ptr{Any}}, Any})
precompile(Tuple{GtkObservables.var"#206#207"{Observables.ObserverFunction}, Gtk.GtkNotebookLeaf})
precompile(Tuple{GtkObservables.var"#206#207"{GtkObservables.Canvas{GtkObservables.UserUnit}}, Gtk.GtkCanvas})
precompile(Tuple{typeof(IJulia.interrupt_request), ZMQ.Socket, IJulia.Msg})
precompile(Tuple{IJulia.var"#39#40"})
precompile(Tuple{typeof(Base.list_deletefirst!), Base.InvasiveLinkedList{Task}, Task})
